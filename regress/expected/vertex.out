/*
 * PostGraph
 * Copyright (C) 2023 by PostGraph
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
LOAD 'postgraph';
SET search_path TO postgraph;
--
-- Vertex
--
--Basic Vertex Creation
SELECT create_graph('vertex');
NOTICE:  graph "vertex" has been created
 create_graph 
--------------
 
(1 row)

SELECT create_vlabel('vertex', 'vlabel');
NOTICE:  VLabel "vlabel" has been created
 create_vlabel 
---------------
 
(1 row)

SELECT build_vertex(_graphid(3, 1), graphid, gtype_build_map()) FROM ag_graph;
                         build_vertex                         
--------------------------------------------------------------
 {"id": 844424930131969, "label": "vlabel", "properties": {}}
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map()) FROM ag_graph;
                      build_vertex                      
--------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {}}
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) FROM ag_graph;
                         build_vertex                          
---------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {"id": 2}}
(1 row)

--Null properties
SELECT build_vertex(_graphid(1, 1),  graphid, NULL) FROM ag_graph;
 build_vertex 
--------------
 
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_list()) FROM ag_graph;
 build_vertex 
--------------
 
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map()) =
       build_vertex(_graphid(1, 1), graphid, gtype_build_map()) FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map()) =
       build_vertex(_graphid(1, 2), graphid, gtype_build_map()) FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map()) <>
       build_vertex(_graphid(1, 1), graphid, gtype_build_map()) FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map()) <>
       build_vertex(_graphid(1, 2), graphid, gtype_build_map()) FROM ag_graph;
 ?column? 
----------
 t
(1 row)

--
-- id function
--
SELECT id(build_vertex(_graphid(1, 1), graphid, gtype_build_map())) FROM ag_graph;
       id        
-----------------
 281474976710657
(1 row)

SELECT id(NULL) FROM ag_graph;
ERROR:  function id(unknown) is not unique
LINE 1: SELECT id(NULL) FROM ag_graph;
               ^
HINT:  Could not choose a best candidate function. You might need to add explicit type casts.
--
-- label function
--
SELECT label(build_vertex(_graphid(1, 1), graphid, gtype_build_map())) FROM ag_graph;
 label 
-------
 ""
(1 row)

SELECT label(NULL) FROM ag_graph;
ERROR:  function label(unknown) is not unique
LINE 1: SELECT label(NULL) FROM ag_graph;
               ^
HINT:  Could not choose a best candidate function. You might need to add explicit type casts.
--
-- properties function
--
SELECT properties(build_vertex(_graphid(1, 1), graphid, gtype_build_map())) FROM ag_graph;
 properties 
------------
 {}
(1 row)

SELECT properties(build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2))) FROM ag_graph;
 properties 
------------
 {"id": 2}
(1 row)

--
-- -> operator
--
SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map())->'id' FROM ag_graph;
 ?column? 
----------
 
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2))->'id' FROM ag_graph;
 ?column? 
----------
 2
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2))->'idd' FROM ag_graph;
 ?column? 
----------
 
(1 row)

--
-- ->> operator
--
SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map())->>'id' FROM ag_graph;
 ?column? 
----------
 
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2))->>'id' FROM ag_graph;
 ?column? 
----------
 2
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2))->>'idd' FROM ag_graph;
 ?column? 
----------
 
(1 row)

--
-- @> operator
--
SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map()) @> gtype_build_map() FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) @> gtype_build_map() FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) @> gtype_build_map('id', 2) FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) @> gtype_build_map('id', 1) FROM ag_graph;
 ?column? 
----------
 f
(1 row)

--
-- <@ operator
--
SELECT gtype_build_map() <@ build_vertex(_graphid(1, 1), graphid, gtype_build_map()) FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT gtype_build_map() <@ build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT gtype_build_map('id', 2) <@ build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT gtype_build_map('id', 1) <@ build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) FROM ag_graph;
 ?column? 
----------
 f
(1 row)

--
-- ? operator
--
SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map()) ? 'id' FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) ? 'id' FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) ? 'idd' FROM ag_graph;
 ?column? 
----------
 f
(1 row)

--
-- ?| operator
--
SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map()) ?| array['id'] FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) ?| array['id'] FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) ?| array['idd'] FROM ag_graph;
 ?column? 
----------
 f
(1 row)

--
-- ?& operator
--
SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map()) ?& array['id'] FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) ?& array['id'] FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_vertex(_graphid(1, 1), graphid, gtype_build_map('id', 2)) ?& array['idd'] FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT drop_graph('vertex', true);
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to table vertex._ag_label_vertex
drop cascades to table vertex._ag_label_edge
drop cascades to table vertex.vlabel
NOTICE:  graph "vertex" has been dropped
 drop_graph 
------------
 
(1 row)

