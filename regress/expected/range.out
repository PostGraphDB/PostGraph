/*
 * PostGraph
 * Copyright (C) 2023 PostGraphDB
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
LOAD 'postgraph';
SET search_path TO postgraph;
set timezone TO 'GMT';
SELECT * FROM create_graph('range');
NOTICE:  graph "range" has been created
 create_graph 
--------------
 
(1 row)

SELECT tointrange('"[0, 1]"');
 tointrange 
------------
 [0,2)
(1 row)

SELECT tointrange('"[0, 1)"');
 tointrange 
------------
 [0,1)
(1 row)

SELECT tointrange('"(0, 1]"');
 tointrange 
------------
 [1,2)
(1 row)

SELECT tointrange('"(0, 1)"');
 tointrange 
------------
 empty
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1) $$) as (a gtype);
   a   
-------
 [0,1)
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '()') $$) as (a gtype);
   a   
-------
 empty
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '(]') $$) as (a gtype);
   a   
-------
 [1,2)
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') $$) as (a gtype);
   a   
-------
 [0,1)
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 [0,2)
(1 row)

--
-- intrange = intrange
--
SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[]') = intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '()') = intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '(]') = intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') = intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') = intrange(3, 4, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

--
-- intrange <> intrange
--
SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[]') <> intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '()') <> intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '(]') <> intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') <> intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') <> intrange(3, 4, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

--
-- intrange > intrange
--
SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[]') > intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '()') > intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '(]') > intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') > intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') > intrange(3, 4, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

--
-- intrange >= intrange
--
SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[]') >= intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '()') >= intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '(]') >= intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') >= intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') >= intrange(3, 4, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

--
-- intrange < intrange
--
SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[]') < intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '()') < intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '(]') < intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') < intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') < intrange(3, 4, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

--
-- intrange <= intrange
--
SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[]') <= intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '()') <= intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '(]') <= intrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 false
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') <= intrange(0, 1, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT * FROM cypher('range', $$ RETURN intrange(0, 1, '[)') <= intrange(3, 4, '[]') $$) as (a gtype);
  a   
------
 true
(1 row)

SELECT tointmultirange('"{[0, 1]}"');
 tointmultirange 
-----------------
 {[0,2)}
(1 row)

SELECT tonumrange('"[0.5, 1]"');
 tonumrange 
------------
 [0.5,1]
(1 row)

SELECT tonumrange('"[0, 1.5)"');
 tonumrange 
------------
 [0,1.5)
(1 row)

SELECT tonumrange('"(0.5, 1]"');
 tonumrange 
------------
 (0.5,1]
(1 row)

SELECT tonumrange('"(0, 1.5)"');
 tonumrange 
------------
 (0,1.5)
(1 row)

SELECT * FROM cypher('range', $$ RETURN numrange(0, 1) $$) as (a gtype);
   a   
-------
 [0,1)
(1 row)

SELECT * FROM cypher('range', $$ RETURN numrange(0, 1, '()') $$) as (a gtype);
   a   
-------
 (0,1)
(1 row)

SELECT * FROM cypher('range', $$ RETURN numrange(0, 1, '(]') $$) as (a gtype);
   a   
-------
 (0,1]
(1 row)

SELECT * FROM cypher('range', $$ RETURN numrange(0, 1, '[)') $$) as (a gtype);
   a   
-------
 [0,1)
(1 row)

SELECT * FROM cypher('range', $$ RETURN numrange(0, 1, '[]') $$) as (a gtype);
   a   
-------
 [0,1]
(1 row)

SELECT tonummultirange('"{(0, 1.5)}"');
 tonummultirange 
-----------------
 {(0,1.5)}
(1 row)

SELECT totsrange('"[''1/1/2000 12:00:00'', ''1/1/2000 4:00:00 PM'']"');
                        totsrange                        
---------------------------------------------------------
 ["Sat Jan 01 12:00:00 2000","Sat Jan 01 16:00:00 2000"]
(1 row)

SELECT * FROM cypher('range', $$ RETURN tsrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM') $$) as (a gtype);
                            a                            
---------------------------------------------------------
 ["Sat Jan 01 12:00:00 2000","Sat Jan 01 16:00:00 2000")
(1 row)

SELECT * FROM cypher('range', $$ RETURN tsrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM', '()') $$) as (a gtype);
                            a                            
---------------------------------------------------------
 ("Sat Jan 01 12:00:00 2000","Sat Jan 01 16:00:00 2000")
(1 row)

SELECT * FROM cypher('range', $$ RETURN tsrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM', '(]') $$) as (a gtype);
                            a                            
---------------------------------------------------------
 ("Sat Jan 01 12:00:00 2000","Sat Jan 01 16:00:00 2000"]
(1 row)

SELECT * FROM cypher('range', $$ RETURN tsrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM', '[)') $$) as (a gtype);
                            a                            
---------------------------------------------------------
 ["Sat Jan 01 12:00:00 2000","Sat Jan 01 16:00:00 2000")
(1 row)

SELECT * FROM cypher('range', $$ RETURN tsrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM', '[]') $$) as (a gtype);
                            a                            
---------------------------------------------------------
 ["Sat Jan 01 12:00:00 2000","Sat Jan 01 16:00:00 2000"]
(1 row)

SELECT totsmultirange('"{[''1/1/2000 12:00:00'', ''1/1/2000 4:00:00 PM'']}"');
                      totsmultirange                       
-----------------------------------------------------------
 {["Sat Jan 01 12:00:00 2000","Sat Jan 01 16:00:00 2000"]}
(1 row)

SELECT totstzrange('"[''1/1/2000 12:00:00 GMT'', ''1/1/2000 4:00:00 PM GMT'']"');
                           totstzrange                           
-----------------------------------------------------------------
 ["Sat Jan 01 12:00:00 2000 GMT","Sat Jan 01 16:00:00 2000 GMT"]
(1 row)

SELECT * FROM cypher('range', $$ RETURN tstzrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM') $$) as (a gtype);
                                a                                
-----------------------------------------------------------------
 ["Sat Jan 01 12:00:00 2000 GMT","Sat Jan 01 16:00:00 2000 GMT")
(1 row)

SELECT * FROM cypher('range', $$ RETURN tstzrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM', '()') $$) as (a gtype);
                                a                                
-----------------------------------------------------------------
 ("Sat Jan 01 12:00:00 2000 GMT","Sat Jan 01 16:00:00 2000 GMT")
(1 row)

SELECT * FROM cypher('range', $$ RETURN tstzrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM', '(]') $$) as (a gtype);
                                a                                
-----------------------------------------------------------------
 ("Sat Jan 01 12:00:00 2000 GMT","Sat Jan 01 16:00:00 2000 GMT"]
(1 row)

SELECT * FROM cypher('range', $$ RETURN tstzrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM', '[)') $$) as (a gtype);
                                a                                
-----------------------------------------------------------------
 ["Sat Jan 01 12:00:00 2000 GMT","Sat Jan 01 16:00:00 2000 GMT")
(1 row)

SELECT * FROM cypher('range', $$ RETURN tstzrange('1/1/2000 12:00:00', '1/1/2000 4:00:00 PM', '[]') $$) as (a gtype);
                                a                                
-----------------------------------------------------------------
 ["Sat Jan 01 12:00:00 2000 GMT","Sat Jan 01 16:00:00 2000 GMT"]
(1 row)

SELECT totstzmultirange('"{[''1/1/2000 12:00:00 GMT'', ''1/1/2000 4:00:00 PM GMT'']}"');
                         totstzmultirange                          
-------------------------------------------------------------------
 {["Sat Jan 01 12:00:00 2000 GMT","Sat Jan 01 16:00:00 2000 GMT"]}
(1 row)

SELECT todaterange('"[''1/1/2000'', ''1/1/2001'')"');
       todaterange       
-------------------------
 [01-01-2000,01-01-2001)
(1 row)

SELECT * FROM cypher('range', $$ RETURN daterange('1/1/2000', '1/1/2001') $$) as (a gtype);
            a            
-------------------------
 [01-01-2000,01-01-2001)
(1 row)

SELECT * FROM cypher('range', $$ RETURN daterange('1/1/2000', '1/1/2001', '()') $$) as (a gtype);
            a            
-------------------------
 [01-02-2000,01-01-2001)
(1 row)

SELECT * FROM cypher('range', $$ RETURN daterange('1/1/2000', '1/1/2001', '(]') $$) as (a gtype);
            a            
-------------------------
 [01-02-2000,01-02-2001)
(1 row)

SELECT * FROM cypher('range', $$ RETURN daterange('1/1/2000', '1/1/2001', '[)') $$) as (a gtype);
            a            
-------------------------
 [01-01-2000,01-01-2001)
(1 row)

SELECT * FROM cypher('range', $$ RETURN daterange('1/1/2000', '1/1/2001', '[]') $$) as (a gtype);
            a            
-------------------------
 [01-01-2000,01-02-2001)
(1 row)

SELECT todatemultirange('"{[''1/1/2000'', ''1/1/2001'')}"');
     todatemultirange      
---------------------------
 {[01-01-2000,01-01-2001)}
(1 row)

--
-- Clean up
--
SELECT drop_graph('range', true);
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to table range._ag_label_vertex
drop cascades to table range._ag_label_edge
NOTICE:  graph "range" has been dropped
 drop_graph 
------------
 
(1 row)

