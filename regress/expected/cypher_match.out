/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
LOAD 'postgraph';
SET search_path TO postgraph;
SELECT create_graph('cypher_match');
NOTICE:  graph "cypher_match" has been created
 create_graph 
--------------
 
(1 row)

SELECT * FROM cypher('cypher_match', $$CREATE (:v)$$) AS (a gtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$CREATE (:v {i: 0})$$) AS (a gtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$CREATE (:v {i: 1})$$) AS (a gtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$MATCH (n:v) RETURN n$$) AS (n vertex);
                               n                               
---------------------------------------------------------------
 {"id": 844424930131969, "label": "v", "properties": {}}
 {"id": 844424930131970, "label": "v", "properties": {"i": 0}}
 {"id": 844424930131971, "label": "v", "properties": {"i": 1}}
(3 rows)

SELECT * FROM cypher('cypher_match', $$MATCH (n:v) RETURN n.i$$) AS (i gtype);
 i 
---
 
 0
 1
(3 rows)

SELECT * FROM cypher('cypher_match', $$
MATCH (n:v) WHERE n.i > 0
RETURN n.i
$$) AS (i gtype);
 i 
---
 1
(1 row)

--Directed Paths
SELECT * FROM cypher('cypher_match', $$
	CREATE (:v1 {id:'initial'})-[:e1]->(:v1 {id:'middle'})-[:e1]->(:v1 {id:'end'})
$$) AS (a gtype);
 a 
---
(0 rows)

--Undirected Path Tests
SELECT * FROM cypher('cypher_match', $$
	MATCH p=(:v1)-[:e1]-(:v1)-[:e1]-(:v1) RETURN p
$$) AS (a traversal);
                                                                                                                                                                                                                                  a                                                                                                                                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
 [{"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}]
(2 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH p=(a:v1)-[]-()-[]-() RETURN a
$$) AS (a vertex);
                                    a                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(2 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[]-()-[]-(a:v1) RETURN a
$$) AS (a vertex);
                                    a                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(2 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[]-(a:v1)-[]-() RETURN a
$$) AS (a vertex);
                                    a                                    
-------------------------------------------------------------------------
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
(2 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[b:e1]-()-[]-() RETURN b
$$) AS (a edge);
                                                          a                                                          
---------------------------------------------------------------------------------------------------------------------
 {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}
 {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}
(2 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v1)-[]->(), ()-[]->(a) RETURN a
$$) AS (a vertex);
                                    a                                    
-------------------------------------------------------------------------
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
    MATCH p=()-[e]-() RETURN e
$$) AS (a edge);
                                                          a                                                          
---------------------------------------------------------------------------------------------------------------------
 {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}
 {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}
 {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}
 {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}
(4 rows)

-- Right Path Test
SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v1)-[:e1]->(b:v1)-[:e1]->(c:v1) RETURN a, b, c
$$) AS (a vertex, b vertex, c vertex);
                                    a                                     |                                    b                                    |                                  c                                   
--------------------------------------------------------------------------+-------------------------------------------------------------------------+----------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}} | {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}} | {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH p=(a:v1)-[]-()-[]->() RETURN a
$$) AS (a vertex);
                                    a                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH p=(a:v1)-[]->()-[]-() RETURN a
$$) AS (a vertex);
                                    a                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[]-()-[]->(a:v1) RETURN a
$$) AS (a vertex);
                                  a                                   
----------------------------------------------------------------------
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[]-(a:v1)-[]->() RETURN a
$$) AS (a vertex);
                                    a                                    
-------------------------------------------------------------------------
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[b:e1]-()-[]->() RETURN b
$$) AS (a edge);
                                                          a                                                          
---------------------------------------------------------------------------------------------------------------------
 {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}
(1 row)

--Left Path Test
SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v1)<-[:e1]-(b:v1)<-[:e1]-(c:v1) RETURN a, b, c
$$) AS (a vertex, b vertex, c vertex);
                                  a                                   |                                    b                                    |                                    c                                     
----------------------------------------------------------------------+-------------------------------------------------------------------------+--------------------------------------------------------------------------
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}} | {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}} | {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH p=(a:v1)<-[]-()-[]-() RETURN a
$$) AS (a vertex);
                                  a                                   
----------------------------------------------------------------------
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH p=(a:v1)-[]-()<-[]-() RETURN a
$$) AS (a vertex);
                                  a                                   
----------------------------------------------------------------------
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()<-[]-()-[]-(a:v1) RETURN a
$$) AS (a vertex);
                                    a                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()<-[]-(a:v1)-[]-() RETURN a
$$) AS (a vertex);
                                    a                                    
-------------------------------------------------------------------------
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()<-[b:e1]-()-[]-() RETURN b
$$) AS (a edge);
                                                          a                                                          
---------------------------------------------------------------------------------------------------------------------
 {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}
(1 row)

--Divergent Path Tests
SELECT * FROM cypher('cypher_match', $$
	CREATE (:v2 {id:'initial'})<-[:e2]-(:v2 {id:'middle'})-[:e2]->(:v2 {id:'end'})
$$) AS (a gtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()<-[]-(n:v2)-[]->()
	MATCH p=()-[]->(n)
	RETURN p
$$) AS (i traversal);
 i 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()<-[]-(n:v2)-[]->()
	MATCH p=(n)-[]->()
	RETURN p
$$) AS (i traversal);
                                                                                                                                    i                                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}, {"id": 1970324836974593, "start_id": 1688849860263938, "end_id": 1688849860263939, "label": "e2", "properties": {}}, {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}]
 [{"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}, {"id": 1970324836974593, "start_id": 1688849860263938, "end_id": 1688849860263939, "label": "e2", "properties": {}}, {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}]
 [{"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}, {"id": 1970324836974594, "start_id": 1688849860263938, "end_id": 1688849860263937, "label": "e2", "properties": {}}, {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}]
 [{"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}, {"id": 1970324836974594, "start_id": 1688849860263938, "end_id": 1688849860263937, "label": "e2", "properties": {}}, {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}]
(4 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[]-(n:v2)
	RETURN n
$$) AS (i vertex);
                                    i                                     
--------------------------------------------------------------------------
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
 {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
(4 rows)

--Convergent Path Tests
SELECT * FROM cypher('cypher_match', $$
	CREATE (:v3 {id:'initial'})-[:e3]->(:v3 {id:'middle'})<-[:e3]-(:v3 {id:'end'})
$$) AS (a gtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[b:e1]->()
	RETURN b
$$) AS (i edge);
                                                          i                                                          
---------------------------------------------------------------------------------------------------------------------
 {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}
 {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}
(2 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[]->(n:v1)<-[]-()
	MATCH p=(n)<-[]-()
	RETURN p
$$) AS (i traversal);
 i 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[]->(n:v1)<-[]-()
	MATCH p=()-[]->(n)
	RETURN p
$$) AS (i traversal);
 i 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH ()-[]->(n:v1)<-[]-()
	MATCH p=(n)-[]->()
	RETURN p
$$) AS (i traversal);
 i 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH con_path=(a)-[]->()<-[]-()
	where a.id = 'initial'
	RETURN con_path
$$) AS (con_path traversal);
                                                                                                                                                                                                                              con_path                                                                                                                                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}, {"id": 2533274790395906, "start_id": 2251799813685249, "end_id": 2251799813685250, "label": "e3", "properties": {}}, {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}, {"id": 2533274790395905, "start_id": 2251799813685251, "end_id": 2251799813685250, "label": "e3", "properties": {}}, {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}]
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH div_path=(b)<-[]-()-[]->()
	where b.id = 'initial'
	RETURN div_path
$$) AS (div_path traversal);
                                                                                                                                                                                                                              div_path                                                                                                                                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}, {"id": 1970324836974594, "start_id": 1688849860263938, "end_id": 1688849860263937, "label": "e2", "properties": {}}, {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}, {"id": 1970324836974593, "start_id": 1688849860263938, "end_id": 1688849860263939, "label": "e2", "properties": {}}, {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}]
(1 row)

--Patterns
SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v1), p=(a)-[]-()-[]-()
	where a.id = 'initial'
	RETURN p
$$) AS (p traversal);
                                                                                                                                                                                                                                  p                                                                                                                                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH con_path=(a)-[]->()<-[]-(), div_path=(b)<-[]-()-[]->()
	where a.id = 'initial'
	and b.id = 'initial'
	RETURN con_path, div_path
$$) AS (con_path traversal, div_path traversal);
                                                                                                                                                                                                                              con_path                                                                                                                                                                                                                               |                                                                                                                                                                                                                              div_path                                                                                                                                                                                                                               

 [{"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}, {"id": 2533274790395906, "start_id": 2251799813685249, "end_id": 2251799813685250, "label": "e3", "properties": {}}, {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}, {"id": 2533274790395905, "start_id": 2251799813685251, "end_id": 2251799813685250, "label": "e3", "properties": {}}, {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}] | [{"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}, {"id": 1970324836974594, "start_id": 1688849860263938, "end_id": 1688849860263937, "label": "e2", "properties": {}}, {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}, {"id": 1970324836974593, "start_id": 1688849860263938, "end_id": 1688849860263939, "label": "e2", "properties": {}}, {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}]
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v), p=()-[]->()-[]->()
	RETURN a.i, p
$$) AS (i gtype, p traversal);
 i |                                                                                                                                                                                                                                  p                                                                                                                                                                                                                                  
---+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1 | [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
 0 | [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
   | [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
(3 rows)

--Multiple Match Clauses
SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v1)
	where a.id = 'initial'
	MATCH p=(a)-[]-()-[]-()
	RETURN p
$$) AS (p traversal);
                                                                                                                                                                                                                                  p                                                                                                                                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v)
	MATCH p=()-[]->()-[]->()
	RETURN a.i, p
$$) AS (i gtype, p traversal);
 i |                                                                                                                                                                                                                                  p                                                                                                                                                                                                                                  
---+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1 | [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
 0 | [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
   | [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}, {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}, {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}, {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}, {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
(3 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v)
	MATCH (b:v1)-[]-(c)
	RETURN a.i, b.id, c.id
$$) AS (i gtype, b gtype, c gtype);
 i |     b     |     c     
---+-----------+-----------
   | "end"     | "middle"
 0 | "end"     | "middle"
 1 | "end"     | "middle"
   | "middle"  | "end"
 0 | "middle"  | "end"
 1 | "middle"  | "end"
   | "middle"  | "initial"
 0 | "middle"  | "initial"
 1 | "middle"  | "initial"
   | "initial" | "middle"
 0 | "initial" | "middle"
 1 | "initial" | "middle"
(12 rows)

--
-- Property constraints
--
SELECT * FROM cypher('cypher_match',
 $$CREATE ({string_key: "test", int_key: 1, float_key: 3.14, map_key: {key: "value"}, list_key: [1, 2, 3]}) $$)
AS (p gtype);
 p 
---
(0 rows)

SELECT * FROM cypher('cypher_match',
 $$CREATE ({lst: [1, NULL, 3.14, "string", {key: "value"}, []]}) $$)
AS (p gtype);
 p 
---
(0 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (n  {string_key: NULL}) RETURN n $$)
AS (n vertex);
 n 
---
(0 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (n  {string_key: "wrong value"}) RETURN n $$)
AS (n vertex);
 n 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
    MATCH (n {string_key: "test", int_key: 1, float_key: 3.14, map_key: {key: "value"}, list_key: [1, 2, 3]})
    RETURN n $$)
AS (p vertex);
                                                                                p                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {"int_key": 1, "map_key": {"key": "value"}, "list_key": [1, 2, 3], "float_key": 3.14, "string_key": "test"}}
(1 row)

SELECT * FROM cypher('cypher_match',
 $$MATCH (n {string_key: "test"}) RETURN n $$)
AS (p vertex);
                                                                                p                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {"int_key": 1, "map_key": {"key": "value"}, "list_key": [1, 2, 3], "float_key": 3.14, "string_key": "test"}}
(1 row)

SELECT * FROM cypher('cypher_match',
 $$MATCH (n {lst: [1, NULL, 3.14, "string", {key: "value"}, []]})  RETURN n $$)
AS (p vertex);
                                                      p                                                       
--------------------------------------------------------------------------------------------------------------
 {"id": 281474976710658, "label": "", "properties": {"lst": [1, null, 3.14, "string", {"key": "value"}, []]}}
(1 row)

SELECT * FROM cypher('cypher_match',
 $$MATCH (n {lst: [1, NULL, 3.14, "string", {key: "value"}, [], "extra value"]})  RETURN n $$)
AS (p vertex);
 p 
---
(0 rows)

--
-- Prepared Statement Property Constraint
--
PREPARE property_ps(gtype) AS SELECT * FROM cypher('cypher_match',
 $$MATCH (n $props) RETURN n $$, $1)
AS (p vertex);
EXECUTE property_ps(gtype_build_map('props',
                                     gtype_build_map('string_key', 'test')));
                                                                                p                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {"int_key": 1, "map_key": {"key": "value"}, "list_key": [1, 2, 3], "float_key": 3.14, "string_key": "test"}}
(1 row)

-- need a following RETURN clause (should fail)
SELECT * FROM cypher('cypher_match', $$MATCH (n:v)$$) AS (a gtype);
ERROR:  syntax error at end of input
LINE 1: SELECT * FROM cypher('cypher_match', $$MATCH (n:v)$$) AS (a ...
                                                          ^
--Invalid Variables
SELECT * FROM cypher('cypher_match', $$
	MATCH (a)-[]-()-[]-(a:v1) RETURN a
$$) AS (a vertex);
ERROR:  variable a already exists
LINE 2:  MATCH (a)-[]-()-[]-(a:v1) RETURN a
                            ^
SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v1)-[]-()-[a]-() RETURN a
$$) AS (a vertex);
ERROR:  variable a already exists
LINE 2:  MATCH (a:v1)-[]-()-[a]-() RETURN a
                            ^
SELECT * FROM cypher('cypher_match', $$
	MATCH (a:v1)-[]-()-[]-(a {id:'will_fail'}) RETURN a
$$) AS (a vertex);
ERROR:  variable a already exists
LINE 2:  MATCH (a:v1)-[]-()-[]-(a {id:'will_fail'}) RETURN a
                               ^
--Incorrect Labels
SELECT * FROM cypher('cypher_match', $$MATCH (n)-[:v]-() RETURN n$$) AS (n vertex);
ERROR:  label v is for vertices, not edges
LINE 1: SELECT * FROM cypher('cypher_match', $$MATCH (n)-[:v]-() RET...
                                                         ^
SELECT * FROM cypher('cypher_match', $$MATCH (n)-[:emissing]-() RETURN n$$) AS (n vertex);
ERROR:  label emissing does not exists
LINE 1: SELECT * FROM cypher('cypher_match', $$MATCH (n)-[:emissing]...
                                                         ^
SELECT * FROM cypher('cypher_match', $$MATCH (n:e1)-[]-() RETURN n$$) AS (n vertex);
ERROR:  label e1 is for edges, not vertices
LINE 1: SELECT * FROM cypher('cypher_match', $$MATCH (n:e1)-[]-() RE...
                                                     ^
SELECT * FROM cypher('cypher_match', $$MATCH (n:vmissing)-[]-() RETURN n$$) AS (n vertex);
ERROR:  label vmissing does not exists
LINE 1: SELECT * FROM cypher('cypher_match', $$MATCH (n:vmissing)-[]...
                                                     ^
--
-- Path of one vertex. This should select 14
--
SELECT * FROM cypher('cypher_match', $$
       MATCH p=() RETURN p
$$) AS (p traversal);
                                                                                 p                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 281474976710657, "label": "", "properties": {"int_key": 1, "map_key": {"key": "value"}, "list_key": [1, 2, 3], "float_key": 3.14, "string_key": "test"}}]
 [{"id": 281474976710658, "label": "", "properties": {"lst": [1, null, 3.14, "string", {"key": "value"}, []]}}]
 [{"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}]
 [{"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}]
 [{"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}]
 [{"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}]
 [{"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}]
 [{"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}]
 [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}]
 [{"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}]
 [{"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
 [{"id": 844424930131969, "label": "v", "properties": {}}]
 [{"id": 844424930131970, "label": "v", "properties": {"i": 0}}]
 [{"id": 844424930131971, "label": "v", "properties": {"i": 1}}]
(14 rows)

--
-- MATCH with WHERE EXISTS(pattern)
--
SELECT * FROM cypher('cypher_match',
 $$MATCH (u)-[e]->(v) RETURN u, e, v $$) AS (u vertex, e edge, v vertex);
                                    u                                     |                                                          e                                                          |                                    v                                     
--------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}} | {"id": 2533274790395906, "start_id": 2251799813685249, "end_id": 2251799813685250, "label": "e3", "properties": {}} | {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}     | {"id": 2533274790395905, "start_id": 2251799813685251, "end_id": 2251799813685250, "label": "e3", "properties": {}} | {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}  | {"id": 1970324836974594, "start_id": 1688849860263938, "end_id": 1688849860263937, "label": "e2", "properties": {}} | {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}  | {"id": 1970324836974593, "start_id": 1688849860263938, "end_id": 1688849860263939, "label": "e2", "properties": {}} | {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}} | {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}} | {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}  | {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}} | {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(6 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u)-[e]->(v) WHERE EXISTS ((u)-[e]->(v)) RETURN u, e, v $$)
AS (u vertex, e edge, v vertex);
                                    u                                     |                                                          e                                                          |                                    v                                     
--------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}} | {"id": 2533274790395906, "start_id": 2251799813685249, "end_id": 2251799813685250, "label": "e3", "properties": {}} | {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}     | {"id": 2533274790395905, "start_id": 2251799813685251, "end_id": 2251799813685250, "label": "e3", "properties": {}} | {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}  | {"id": 1970324836974594, "start_id": 1688849860263938, "end_id": 1688849860263937, "label": "e2", "properties": {}} | {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}  | {"id": 1970324836974593, "start_id": 1688849860263938, "end_id": 1688849860263939, "label": "e2", "properties": {}} | {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}} | {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}} | {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}  | {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}} | {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(6 rows)

-- Property Constraint in EXISTS
SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE EXISTS((u)-[]->({id: "middle"})) RETURN u $$)
AS (u vertex);
                                    u                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
(3 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE EXISTS((u)-[]->({id: "not a valid id"})) RETURN u $$)
AS (u vertex);
 u 
---
(0 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE EXISTS((u)-[]->({id: NULL})) RETURN u $$)
AS (u vertex);
 u 
---
(0 rows)

-- Exists checks for a loop. There shouldn't be any.
SELECT * FROM cypher('cypher_match',
 $$MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(u)) RETURN u, e, v $$)
AS (u vertex, e edge, v vertex);
 u | e | v 
---+---+---
(0 rows)

-- Create a loop
SELECT * FROM cypher('cypher_match', $$
        CREATE (u:loop {id:'initial'})-[:self]->(u)
$$) AS (a gtype);
 a 
---
(0 rows)

-- dump paths
SELECT * FROM cypher('cypher_match',
 $$MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(v)) RETURN u, e, v $$)
AS (u vertex, e edge, v vertex);
                                     u                                      |                                                           e                                                           |                                     v                                      
----------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}} | {"id": 3096224743817217, "start_id": 2814749767106561, "end_id": 2814749767106561, "label": "self", "properties": {}} | {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}   | {"id": 2533274790395906, "start_id": 2251799813685249, "end_id": 2251799813685250, "label": "e3", "properties": {}}   | {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}       | {"id": 2533274790395905, "start_id": 2251799813685251, "end_id": 2251799813685250, "label": "e3", "properties": {}}   | {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}    | {"id": 1970324836974594, "start_id": 1688849860263938, "end_id": 1688849860263937, "label": "e2", "properties": {}}   | {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}    | {"id": 1970324836974593, "start_id": 1688849860263938, "end_id": 1688849860263939, "label": "e2", "properties": {}}   | {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}   | {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}   | {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}    | {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}   | {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(7 rows)

-- Exists checks for a loop. There should be one.
SELECT * FROM cypher('cypher_match',
 $$MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(u)) RETURN u, e, v $$)
AS (u vertex, e edge, v vertex);
                                     u                                      |                                                           e                                                           |                                     v                                      
----------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}} | {"id": 3096224743817217, "start_id": 2814749767106561, "end_id": 2814749767106561, "label": "self", "properties": {}} | {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
(1 row)

-- Exists checks for a loop. There should be one.
SELECT * FROM cypher('cypher_match',
 $$MATCH (u)-[e]->(v) WHERE EXISTS((v)-[e]->(v)) RETURN u, e, v $$)
AS (u vertex, e edge, v vertex);
                                     u                                      |                                                           e                                                           |                                     v                                      
----------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}} | {"id": 3096224743817217, "start_id": 2814749767106561, "end_id": 2814749767106561, "label": "self", "properties": {}} | {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
(1 row)

-- Exists checks for a loop. There should be none because of edge uniqueness
-- requirement.
SELECT * FROM cypher('cypher_match',
 $$MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(u)-[e]->(u)) RETURN u, e, v $$)
AS (u vertex, e edge, v vertex);
 u | e | v 
---+---+---
(0 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(u)) AND EXISTS((v)-[e]->(v)) RETURN u, e, v $$)
AS (u vertex, e edge, v vertex);
                                     u                                      |                                                           e                                                           |                                     v                                      
----------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}} | {"id": 3096224743817217, "start_id": 2814749767106561, "end_id": 2814749767106561, "label": "self", "properties": {}} | {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
(1 row)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(x)) RETURN u, e, v $$)
AS (u vertex, e edge, v vertex);
                                     u                                      |                                                           e                                                           |                                     v                                      
----------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}} | {"id": 3096224743817217, "start_id": 2814749767106561, "end_id": 2814749767106561, "label": "self", "properties": {}} | {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}   | {"id": 2533274790395906, "start_id": 2251799813685249, "end_id": 2251799813685250, "label": "e3", "properties": {}}   | {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}       | {"id": 2533274790395905, "start_id": 2251799813685251, "end_id": 2251799813685250, "label": "e3", "properties": {}}   | {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}    | {"id": 1970324836974594, "start_id": 1688849860263938, "end_id": 1688849860263937, "label": "e2", "properties": {}}   | {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}    | {"id": 1970324836974593, "start_id": 1688849860263938, "end_id": 1688849860263939, "label": "e2", "properties": {}}   | {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}   | {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}   | {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}    | {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}   | {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
(7 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE EXISTS(MATCH (u)-[]->({id: "middle"}) RETURN 1) RETURN u $$)
AS (u vertex);
                                    u                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
(3 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE EXISTS(MATCH (u)-[]->({id: "middle"}) RETURN u) RETURN u $$)
AS (u vertex);
                                    u                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
(3 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE u.id = ANY (MATCH (v) RETURN v.id) RETURN u $$)
AS (u vertex);
                                     u                                      
----------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
 {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
 {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
(10 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE u.id = ANY (MATCH (v) RETURN NULL) RETURN u $$)
AS (u vertex);
 u 
---
(0 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE u.id = SOME (MATCH (v) RETURN v.id) RETURN u $$)
AS (u vertex);
                                     u                                      
----------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
 {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
 {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
(10 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE u.id = ALL (MATCH (v) RETURN v.id) RETURN u $$)
AS (u vertex);
 u 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
    MATCH (u)
    WHERE EXISTS(
	MATCH (u)-[]->(v) 
	WHERE v.id = "middle"
	RETURN 1
    )
    RETURN u
$$) AS (u vertex);
                                    u                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
(3 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE EXISTS(MATCH (u)-[]->({id: "gsjka"}) RETURN 1) RETURN u $$)
AS (u vertex);
 u 
---
(0 rows)

SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE EXISTS(MATCH (v {id: 'middle'}) MATCH (u)-[]->(v) RETURN 1) RETURN u $$)
AS (u vertex);
                                    u                                     
--------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
(3 rows)

EXPLAIN SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE EXISTS(MATCH (v {id: 'middle'}) MATCH (u)-[]->(v) RETURN 1) RETURN u $$)
AS (u vertex);
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Result  (cost=0.00..222941.40 rows=3060 width=32)
   ->  Append  (cost=0.00..222528.30 rows=3060 width=40)
         ->  Seq Scan on _ag_label_vertex u_1  (cost=0.00..4363.00 rows=60 width=40)
               Filter: (SubPlan 1)
               SubPlan 1
                 ->  Nested Loop  (cost=0.00..218.04 rows=6 width=0)
                       Join Filter: (v.id = _age_default_alias_0.end_id)
                       ->  Append  (cost=0.00..88.61 rows=21 width=8)
                             ->  Seq Scan on _ag_label_edge _age_default_alias_0_1  (cost=0.00..0.00 rows=1 width=8)
                                   Filter: (start_id = u_1.id)
                             ->  Seq Scan on e1 _age_default_alias_0_2  (cost=0.00..22.12 rows=5 width=8)
                                   Filter: (start_id = u_1.id)
                             ->  Seq Scan on e2 _age_default_alias_0_3  (cost=0.00..22.12 rows=5 width=8)
                                   Filter: (start_id = u_1.id)
                             ->  Seq Scan on e3 _age_default_alias_0_4  (cost=0.00..22.12 rows=5 width=8)
                                   Filter: (start_id = u_1.id)
                             ->  Seq Scan on self _age_default_alias_0_5  (cost=0.00..22.12 rows=5 width=8)
                                   Filter: (start_id = u_1.id)
                       ->  Materialize  (cost=0.00..127.56 rows=6 width=8)
                             ->  Append  (cost=0.00..127.53 rows=6 width=8)
                                   ->  Seq Scan on _ag_label_vertex v_1  (cost=0.00..2.50 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on v v_2  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on v1 v_3  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on v2 v_4  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on v3 v_5  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on loop v_6  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
         ->  Seq Scan on v u_2  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
         ->  Seq Scan on v1 u_3  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
         ->  Seq Scan on v2 u_4  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
         ->  Seq Scan on v3 u_5  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
         ->  Seq Scan on loop u_6  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
(42 rows)

EXPLAIN
SELECT * FROM cypher('cypher_match',
 $$MATCH (u) WHERE EXISTS(MATCH (u)-[]->(v {id: 'middle'}) RETURN 1) RETURN u $$)
AS (u vertex);
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Result  (cost=0.00..222941.40 rows=3060 width=32)
   ->  Append  (cost=0.00..222528.30 rows=3060 width=40)
         ->  Seq Scan on _ag_label_vertex u_1  (cost=0.00..4363.00 rows=60 width=40)
               Filter: (SubPlan 1)
               SubPlan 1
                 ->  Nested Loop  (cost=0.00..218.04 rows=6 width=0)
                       Join Filter: (_age_default_alias_0.end_id = v.id)
                       ->  Append  (cost=0.00..88.61 rows=21 width=8)
                             ->  Seq Scan on _ag_label_edge _age_default_alias_0_1  (cost=0.00..0.00 rows=1 width=8)
                                   Filter: (start_id = u_1.id)
                             ->  Seq Scan on e1 _age_default_alias_0_2  (cost=0.00..22.12 rows=5 width=8)
                                   Filter: (start_id = u_1.id)
                             ->  Seq Scan on e2 _age_default_alias_0_3  (cost=0.00..22.12 rows=5 width=8)
                                   Filter: (start_id = u_1.id)
                             ->  Seq Scan on e3 _age_default_alias_0_4  (cost=0.00..22.12 rows=5 width=8)
                                   Filter: (start_id = u_1.id)
                             ->  Seq Scan on self _age_default_alias_0_5  (cost=0.00..22.12 rows=5 width=8)
                                   Filter: (start_id = u_1.id)
                       ->  Materialize  (cost=0.00..127.56 rows=6 width=8)
                             ->  Append  (cost=0.00..127.53 rows=6 width=8)
                                   ->  Seq Scan on _ag_label_vertex v_1  (cost=0.00..2.50 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on v v_2  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on v1 v_3  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on v2 v_4  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on v3 v_5  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
                                   ->  Seq Scan on loop v_6  (cost=0.00..25.00 rows=1 width=8)
                                         Filter: (properties @> '{"id": "middle"}'::gtype)
         ->  Seq Scan on v u_2  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
         ->  Seq Scan on v1 u_3  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
         ->  Seq Scan on v2 u_4  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
         ->  Seq Scan on v3 u_5  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
         ->  Seq Scan on loop u_6  (cost=0.00..43630.00 rows=600 width=40)
               Filter: (SubPlan 1)
(42 rows)

SELECT * FROM cypher('cypher_match', $$
    MATCH (u) 
    RETURN case WHEN EXISTS(MATCH (u)-[]->({id: "gsjka"}) RETURN 1) THEN 1 ELSE 2 END
$$)
AS (u gtype);
 u 
---
 2
 2
 2
 2
 2
 2
 2
 2
 2
 2
 2
 2
 2
 2
 2
(15 rows)

SELECT * FROM cypher('cypher_match', $$
    MATCH (u)
    RETURN case WHEN EXISTS(MATCH (u)-[]->() RETURN 1) THEN 1 ELSE 2 END
$$)
AS (u gtype);
 u 
---
 2
 2
 2
 2
 2
 1
 1
 2
 2
 1
 2
 1
 2
 1
 1
(15 rows)

EXPLAIN SELECT * FROM cypher('cypher_match', $$
    MATCH (u)
    RETURN case WHEN EXISTS(MATCH (u)-[]->() RETURN 1) THEN 1 ELSE 2 END
$$)
AS (u gtype);
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Result  (cost=0.00..26026.03 rows=6120 width=32)
   ->  Append  (cost=0.00..142.80 rows=6120 width=8)
         ->  Seq Scan on _ag_label_vertex u_1  (cost=0.00..2.20 rows=120 width=8)
         ->  Seq Scan on v u_2  (cost=0.00..22.00 rows=1200 width=8)
         ->  Seq Scan on v1 u_3  (cost=0.00..22.00 rows=1200 width=8)
         ->  Seq Scan on v2 u_4  (cost=0.00..22.00 rows=1200 width=8)
         ->  Seq Scan on v3 u_5  (cost=0.00..22.00 rows=1200 width=8)
         ->  Seq Scan on loop u_6  (cost=0.00..22.00 rows=1200 width=8)
   SubPlan 1
     ->  Append  (cost=0.00..88.61 rows=21 width=0)
           ->  Seq Scan on _ag_label_edge _age_default_alias_0_1  (cost=0.00..0.00 rows=1 width=0)
                 Filter: (start_id = u.id)
           ->  Seq Scan on e1 _age_default_alias_0_2  (cost=0.00..22.12 rows=5 width=0)
                 Filter: (start_id = u.id)
           ->  Seq Scan on e2 _age_default_alias_0_3  (cost=0.00..22.12 rows=5 width=0)
                 Filter: (start_id = u.id)
           ->  Seq Scan on e3 _age_default_alias_0_4  (cost=0.00..22.12 rows=5 width=0)
                 Filter: (start_id = u.id)
           ->  Seq Scan on self _age_default_alias_0_5  (cost=0.00..22.12 rows=5 width=0)
                 Filter: (start_id = u.id)
(20 rows)

SELECT * FROM cypher('cypher_match', $$
    MATCH (u)
    RETURN case WHEN EXISTS((u)-[]->()) THEN 1 ELSE 2 END
$$)
AS (u gtype);
 u 
---
 2
 2
 2
 2
 2
 1
 1
 2
 2
 1
 2
 1
 2
 1
 1
(15 rows)

EXPLAIN
SELECT *
FROM cypher_match._ag_label_vertex as v
WHERE EXISTS (
    SELECT * FROM cypher_match._ag_label_edge as e WHERE v.id = e.start_id
);
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Hash Join  (cost=112.41..305.31 rows=3060 width=40)
   Hash Cond: (v.id = e.start_id)
   ->  Append  (cost=0.00..142.80 rows=6120 width=40)
         ->  Seq Scan on _ag_label_vertex v_1  (cost=0.00..2.20 rows=120 width=40)
         ->  Seq Scan on v v_2  (cost=0.00..22.00 rows=1200 width=40)
         ->  Seq Scan on v1 v_3  (cost=0.00..22.00 rows=1200 width=40)
         ->  Seq Scan on v2 v_4  (cost=0.00..22.00 rows=1200 width=40)
         ->  Seq Scan on v3 v_5  (cost=0.00..22.00 rows=1200 width=40)
         ->  Seq Scan on loop v_6  (cost=0.00..22.00 rows=1200 width=40)
   ->  Hash  (cost=109.91..109.91 rows=200 width=8)
         ->  HashAggregate  (cost=107.91..109.91 rows=200 width=8)
               Group Key: e.start_id
               ->  Append  (cost=0.00..98.21 rows=3881 width=8)
                     ->  Seq Scan on _ag_label_edge e_1  (cost=0.00..0.00 rows=1 width=8)
                     ->  Seq Scan on e1 e_2  (cost=0.00..19.70 rows=970 width=8)
                     ->  Seq Scan on e2 e_3  (cost=0.00..19.70 rows=970 width=8)
                     ->  Seq Scan on e3 e_4  (cost=0.00..19.70 rows=970 width=8)
                     ->  Seq Scan on self e_5  (cost=0.00..19.70 rows=970 width=8)
(18 rows)

EXPLAIN
SELECT *
FROM cypher_match._ag_label_vertex as u
WHERE EXISTS (
    SELECT * FROM cypher_match._ag_label_edge as e 
    JOIN cypher_match._ag_label_vertex as v ON v.id = e.end_id
    WHERE u.id = e.start_id
);
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Gather  (cost=2538.33..2976.11 rows=3060 width=40)
   Workers Planned: 2
   ->  Parallel Hash Semi Join  (cost=1538.33..1670.11 rows=1275 width=40)
         Hash Cond: (u.id = e.start_id)
         ->  Parallel Append  (cost=0.00..99.75 rows=2550 width=40)
               ->  Parallel Seq Scan on v u_2  (cost=0.00..17.06 rows=706 width=40)
               ->  Parallel Seq Scan on v1 u_3  (cost=0.00..17.06 rows=706 width=40)
               ->  Parallel Seq Scan on v2 u_4  (cost=0.00..17.06 rows=706 width=40)
               ->  Parallel Seq Scan on v3 u_5  (cost=0.00..17.06 rows=706 width=40)
               ->  Parallel Seq Scan on loop u_6  (cost=0.00..17.06 rows=706 width=40)
               ->  Parallel Seq Scan on _ag_label_vertex u_1  (cost=0.00..1.71 rows=71 width=40)
         ->  Parallel Hash  (cost=919.79..919.79 rows=49483 width=8)
               ->  Parallel Hash Join  (cost=91.12..919.79 rows=49483 width=8)
                     Hash Cond: (v.id = e.end_id)
                     ->  Parallel Append  (cost=0.00..99.75 rows=2550 width=8)
                           ->  Parallel Seq Scan on v v_2  (cost=0.00..17.06 rows=706 width=8)
                           ->  Parallel Seq Scan on v1 v_3  (cost=0.00..17.06 rows=706 width=8)
                           ->  Parallel Seq Scan on v2 v_4  (cost=0.00..17.06 rows=706 width=8)
                           ->  Parallel Seq Scan on v3 v_5  (cost=0.00..17.06 rows=706 width=8)
                           ->  Parallel Seq Scan on loop v_6  (cost=0.00..17.06 rows=706 width=8)
                           ->  Parallel Seq Scan on _ag_label_vertex v_1  (cost=0.00..1.71 rows=71 width=8)
                     ->  Parallel Hash  (cost=70.91..70.91 rows=1617 width=16)
                           ->  Parallel Append  (cost=0.00..70.91 rows=1617 width=16)
                                 ->  Parallel Seq Scan on e1 e_2  (cost=0.00..15.71 rows=571 width=16)
                                 ->  Parallel Seq Scan on e2 e_3  (cost=0.00..15.71 rows=571 width=16)
                                 ->  Parallel Seq Scan on e3 e_4  (cost=0.00..15.71 rows=571 width=16)
                                 ->  Parallel Seq Scan on self e_5  (cost=0.00..15.71 rows=571 width=16)
                                 ->  Parallel Seq Scan on _ag_label_edge e_1  (cost=0.00..0.00 rows=1 width=16)
(28 rows)

--
--Distinct
--
SELECT * FROM cypher('cypher_match', $$
	MATCH (u)
	RETURN DISTINCT u.id
$$) AS (i gtype);
     i     
-----------
 
 "end"
 "initial"
 "middle"
(4 rows)

SELECT * FROM cypher('cypher_match', $$
	CREATE (u:duplicate)-[:dup_edge {id:1 }]->(:other_v)
$$) AS (a gtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH (u:duplicate)
	CREATE (u)-[:dup_edge {id:2 }]->(:other_v)
$$) AS (a gtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH (u:duplicate)-[]-(:other_v)
	RETURN DISTINCT u
$$) AS (i vertex);
                                i                                 
------------------------------------------------------------------
 {"id": 3377699720527873, "label": "duplicate", "properties": {}}
(1 row)

SELECT * FROM cypher('cypher_match', $$
	MATCH p=(:duplicate)-[]-(:other_v)
	RETURN DISTINCT p
$$) AS (i traversal);
                                                                                                                                  i                                                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 3377699720527873, "label": "duplicate", "properties": {}}, {"id": 3659174697238529, "start_id": 3377699720527873, "end_id": 3940649673949185, "label": "dup_edge", "properties": {"id": 1}}, {"id": 3940649673949185, "label": "other_v", "properties": {}}]
(1 row)

--
-- Limit
--
SELECT * FROM cypher('cypher_match', $$
	MATCH (u)
	RETURN u
$$) AS (i vertex);
                                                                                i                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {"int_key": 1, "map_key": {"key": "value"}, "list_key": [1, 2, 3], "float_key": 3.14, "string_key": "test"}}
 {"id": 281474976710658, "label": "", "properties": {"lst": [1, null, 3.14, "string", {"key": "value"}, []]}}
 {"id": 844424930131969, "label": "v", "properties": {}}
 {"id": 844424930131970, "label": "v", "properties": {"i": 0}}
 {"id": 844424930131971, "label": "v", "properties": {"i": 1}}
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
 {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
 {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
 {"id": 3377699720527873, "label": "duplicate", "properties": {}}
 {"id": 3940649673949185, "label": "other_v", "properties": {}}
 {"id": 3940649673949186, "label": "other_v", "properties": {}}
(18 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH (u)
	RETURN u LIMIT 3
$$) AS (i vertex);
                                                                                i                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {"int_key": 1, "map_key": {"key": "value"}, "list_key": [1, 2, 3], "float_key": 3.14, "string_key": "test"}}
 {"id": 281474976710658, "label": "", "properties": {"lst": [1, null, 3.14, "string", {"key": "value"}, []]}}
 {"id": 844424930131969, "label": "v", "properties": {}}
(3 rows)

--
-- Skip
--
SELECT * FROM cypher('cypher_match', $$
	MATCH (u)
	RETURN u SKIP 7
$$) AS (i vertex);
                                     i                                      
----------------------------------------------------------------------------
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
 {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
 {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
 {"id": 3377699720527873, "label": "duplicate", "properties": {}}
 {"id": 3940649673949185, "label": "other_v", "properties": {}}
 {"id": 3940649673949186, "label": "other_v", "properties": {}}
(11 rows)

SELECT * FROM cypher('cypher_match', $$
	MATCH (u)
	RETURN u SKIP 7 LIMIT 3
$$) AS (i vertex);
                                    i                                     
--------------------------------------------------------------------------
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
 {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
(3 rows)

--
-- Optional Match
--
SELECT * FROM cypher('cypher_match', $$
    CREATE (:opt_match_v {name: 'someone'})-[:opt_match_e]->(:opt_match_v {name: 'somebody'}),
           (:opt_match_v {name: 'anybody'})-[:opt_match_e]->(:opt_match_v {name: 'nobody'})
$$) AS (u gtype);
 u 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
    MATCH (u:opt_match_v)
    OPTIONAL MATCH (u)-[m]-(l)
    RETURN u.name as u, type(m), l.name as l
    ORDER BY u, m, l
$$) AS (u gtype, m gtype, l gtype);
     u      |       m       |     l      
------------+---------------+------------
 "someone"  | "opt_match_e" | "somebody"
 "somebody" | "opt_match_e" | "someone"
 "anybody"  | "opt_match_e" | "nobody"
 "nobody"   | "opt_match_e" | "anybody"
(4 rows)

SELECT * FROM cypher('cypher_match', $$
    OPTIONAL MATCH (n:opt_match_v)-[r]->(p), (m:opt_match_v)-[s]->(q)
    WHERE id(n) <> id(m)
    RETURN n.name as n, type(r) AS r, p.name as p,
           m.name AS m, type(s) AS s, q.name AS q
    ORDER BY n, p, m, q
$$) AS (n gtype, r gtype, p gtype, m gtype, s gtype, q gtype);
     n     |       r       |     p      |     m     |       s       |     q      
-----------+---------------+------------+-----------+---------------+------------
 "anybody" | "opt_match_e" | "nobody"   | "someone" | "opt_match_e" | "somebody"
 "someone" | "opt_match_e" | "somebody" | "anybody" | "opt_match_e" | "nobody"
(2 rows)

SELECT * FROM cypher('cypher_match', $$
    MATCH (n:opt_match_v), (m:opt_match_v)
    WHERE id(n) <> id(m)
    OPTIONAL MATCH (n)-[r]->(p), (m)-[s]->(q)
    RETURN n.name AS n, type(r) AS r, p.name AS p,
           m.name AS m, type(s) AS s, q.name AS q
    ORDER BY n, p, m, q
 $$) AS (n gtype, r gtype, p gtype, m gtype, s gtype, q gtype);
     n      |       r       |     p      |     m      |       s       |     q      
------------+---------------+------------+------------+---------------+------------
 "nobody"   |               |            | "someone"  |               | 
 "someone"  | "opt_match_e" | "somebody" | "anybody"  | "opt_match_e" | "nobody"
 "someone"  |               |            | "nobody"   |               | 
 "somebody" |               |            | "someone"  |               | 
 "somebody" |               |            | "anybody"  |               | 
 "somebody" |               |            | "nobody"   |               | 
 "someone"  |               |            | "somebody" |               | 
 "nobody"   |               |            | "anybody"  |               | 
 "nobody"   |               |            | "somebody" |               | 
 "anybody"  | "opt_match_e" | "nobody"   | "someone"  | "opt_match_e" | "somebody"
 "anybody"  |               |            | "nobody"   |               | 
 "anybody"  |               |            | "somebody" |               | 
(12 rows)

-- Clean up
SELECT DISTINCT * FROM cypher('cypher_match', $$
    MATCH (u) DETACH DELETE (u)
$$) AS (i gtype);
 i 
---
(0 rows)

-- Prepare
SELECT * FROM cypher('cypher_match', $$
    CREATE (u {name: "orphan"})
    CREATE (u1 {name: "F"})-[u2:e1]->(u3 {name: "T"})
    RETURN u1, u2, u3
$$) as (u1 vertex, u2 edge, u3 vertex);
                                u1                                 |                                                        u2                                                         |                                u3                                 
-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------
 {"id": 281474976710660, "label": "", "properties": {"name": "F"}} | {"id": 1407374883553283, "start_id": 281474976710660, "end_id": 281474976710661, "label": "e1", "properties": {}} | {"id": 281474976710661, "label": "", "properties": {"name": "T"}}
(1 row)

-- Querying NOT EXISTS syntax
SELECT * FROM cypher('cypher_match', $$
     MATCH (f),(t)
     WHERE NOT EXISTS((f)-[]->(t))
     RETURN f.name, t.name
 $$) as (f gtype, t gtype);
    f     |    t     
----------+----------
 "orphan" | "orphan"
 "orphan" | "F"
 "orphan" | "T"
 "F"      | "orphan"
 "F"      | "F"
 "T"      | "orphan"
 "T"      | "F"
 "T"      | "T"
(8 rows)

-- Querying EXISTS syntax
SELECT * FROM cypher('cypher_match', $$
    MATCH (f),(t)
    WHERE EXISTS((f)-[]->(t))
    RETURN f.name, t.name
 $$) as (f gtype, t gtype);
  f  |  t  
-----+-----
 "F" | "T"
(1 row)

-- Querying ALL
SELECT * FROM cypher('cypher_match', $$
    MATCH (f),(t)
    WHERE NOT EXISTS((f)-[]->(t)) or true
    RETURN f.name, t.name
$$) as (f gtype, t gtype);
    f     |    t     
----------+----------
 "orphan" | "orphan"
 "orphan" | "F"
 "orphan" | "T"
 "F"      | "orphan"
 "F"      | "F"
 "F"      | "T"
 "T"      | "orphan"
 "T"      | "F"
 "T"      | "T"
(9 rows)

-- Querying ALL
SELECT * FROM cypher('cypher_match', $$
    MATCH (f),(t)
    RETURN f.name, t.name
$$) as (f gtype, t gtype);
    f     |    t     
----------+----------
 "orphan" | "orphan"
 "orphan" | "F"
 "orphan" | "T"
 "F"      | "orphan"
 "F"      | "F"
 "F"      | "T"
 "T"      | "orphan"
 "T"      | "F"
 "T"      | "T"
(9 rows)

--
-- Constraints and WHERE clause together
--
SELECT * FROM cypher('cypher_match', $$
    CREATE ({i: 1, j: 2, k: 3}), ({i: 1, j: 3}), ({i:2, k: 3})
$$) as (a gtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_match', $$
    MATCH (n {j: 2})
    WHERE n.i = 1
    RETURN n
$$) as (n vertex);
                                      n                                       
------------------------------------------------------------------------------
 {"id": 281474976710662, "label": "", "properties": {"i": 1, "j": 2, "k": 3}}
(1 row)

-- RETURN * and (u)--(v) optional forms
SELECT create_graph('opt_forms');
NOTICE:  graph "opt_forms" has been created
 create_graph 
--------------
 
(1 row)

SELECT * FROM cypher('opt_forms', $$CREATE ({i:1})-[:KNOWS]->({i:2})<-[:KNOWS]-({i:3})$$)AS (result gtype);
 result 
--------
(0 rows)

SELECT * FROM cypher('opt_forms', $$MATCH (u) RETURN u$$) AS (result vertex);
                            result                            
--------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {"i": 1}}
 {"id": 281474976710658, "label": "", "properties": {"i": 2}}
 {"id": 281474976710659, "label": "", "properties": {"i": 3}}
(3 rows)

SELECT * FROM cypher('opt_forms', $$MATCH (u) RETURN *$$) AS (result vertex);
ERROR:  return row and column definition list do not match
LINE 1: SELECT * FROM cypher('opt_forms', $$MATCH (u) RETURN *$$) AS...
                      ^
SELECT * FROM cypher('opt_forms', $$MATCH (u)--(v) RETURN u.i, v.i$$) AS (u gtype, v gtype);
 u | v 
---+---
 2 | 3
 3 | 2
 1 | 2
 2 | 1
(4 rows)

SELECT * FROM cypher('opt_forms', $$MATCH (u)-->(v) RETURN u.i, v.i$$) AS (u gtype, v gtype);
 u | v 
---+---
 3 | 2
 1 | 2
(2 rows)

SELECT * FROM cypher('opt_forms', $$MATCH (u)<--(v) RETURN u.i, v.i$$) AS (u gtype, v gtype);
 u | v 
---+---
 2 | 3
 2 | 1
(2 rows)

SELECT * FROM cypher('opt_forms', $$MATCH (u)-->()<--(v) RETURN u.i, v.i$$) AS (u gtype, v gtype);
 u | v 
---+---
 3 | 1
 1 | 3
(2 rows)

SELECT * FROM cypher('opt_forms', $$MATCH (u) CREATE (u)-[:edge]->() RETURN *$$) AS (results vertex);
ERROR:  return row and column definition list do not match
LINE 1: SELECT * FROM cypher('opt_forms', $$MATCH (u) CREATE (u)-[:e...
                      ^
SELECT * FROM cypher('opt_forms', $$MATCH (u)-->()<--(v) RETURN *$$) AS (col1 vertex, col2 vertex);
ERROR:  return row and column definition list do not match
LINE 1: SELECT * FROM cypher('opt_forms', $$MATCH (u)-->()<--(v) RET...
                      ^
--
-- ORDER BY
--
SELECT * FROM cypher('cypher_match', $$MATCH (n) ORDER BY n.i RETURN n$$) AS (n vertex);
                                      n                                       
------------------------------------------------------------------------------
 {"id": 281474976710662, "label": "", "properties": {"i": 1, "j": 2, "k": 3}}
 {"id": 281474976710663, "label": "", "properties": {"i": 1, "j": 3}}
 {"id": 281474976710664, "label": "", "properties": {"i": 2, "k": 3}}
 {"id": 281474976710659, "label": "", "properties": {"name": "orphan"}}
 {"id": 281474976710660, "label": "", "properties": {"name": "F"}}
 {"id": 281474976710661, "label": "", "properties": {"name": "T"}}
(6 rows)

EXPLAIN SELECT * FROM cypher('cypher_match', $$MATCH (n) ORDER BY n.i RETURN n$$) AS (n vertex);
                                          QUERY PLAN                                           
-----------------------------------------------------------------------------------------------
 Subquery Scan on _  (cost=2207.09..2328.59 rows=9720 width=32)
   ->  Sort  (cost=2207.09..2231.39 rows=9720 width=104)
         Sort Key: ((n.properties -> '"i"'::gtype))
         ->  Result  (cost=0.00..1563.30 rows=9720 width=104)
               ->  Append  (cost=0.00..226.80 rows=9720 width=40)
                     ->  Seq Scan on _ag_label_vertex n_1  (cost=0.00..2.20 rows=120 width=40)
                     ->  Seq Scan on v n_2  (cost=0.00..22.00 rows=1200 width=40)
                     ->  Seq Scan on v1 n_3  (cost=0.00..22.00 rows=1200 width=40)
                     ->  Seq Scan on v2 n_4  (cost=0.00..22.00 rows=1200 width=40)
                     ->  Seq Scan on v3 n_5  (cost=0.00..22.00 rows=1200 width=40)
                     ->  Seq Scan on loop n_6  (cost=0.00..22.00 rows=1200 width=40)
                     ->  Seq Scan on duplicate n_7  (cost=0.00..22.00 rows=1200 width=40)
                     ->  Seq Scan on other_v n_8  (cost=0.00..22.00 rows=1200 width=40)
                     ->  Seq Scan on opt_match_v n_9  (cost=0.00..22.00 rows=1200 width=40)
(14 rows)

EXPLAIN SELECT * FROM cypher('cypher_match', $$
	MATCH (n)
	MATCH (n)-[]->(m) ORDER BY m
	RETURN n
$$) AS (n vertex);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on _  (cost=3882329.10..5333704.50 rows=11457490 width=32)
   ->  Gather Merge  (cost=3882329.10..5219129.60 rows=11457490 width=208)
         Workers Planned: 2
         ->  Sort  (cost=3881329.08..3895650.94 rows=5728745 width=208)
               Sort Key: (build_vertex(m.id, '21416'::oid, m.properties))
               ->  Parallel Hash Join  (cost=1322.33..1534763.53 rows=5728745 width=208)
                     Hash Cond: (_age_default_alias_0.end_id = m.id)
                     ->  Merge Join  (cost=1113.28..18529.63 rows=117875 width=48)
                           Merge Cond: (_age_default_alias_0.start_id = ((id(build_vertex(n.id, '21416'::oid, n.properties)))::graphid))
                           ->  Sort  (cost=242.69..248.75 rows=2425 width=16)
                                 Sort Key: _age_default_alias_0.start_id
                                 ->  Parallel Append  (cost=0.00..106.36 rows=2425 width=16)
                                       ->  Parallel Seq Scan on e1 _age_default_alias_0_2  (cost=0.00..15.71 rows=571 width=16)
                                       ->  Parallel Seq Scan on e2 _age_default_alias_0_3  (cost=0.00..15.71 rows=571 width=16)
                                       ->  Parallel Seq Scan on e3 _age_default_alias_0_4  (cost=0.00..15.71 rows=571 width=16)
                                       ->  Parallel Seq Scan on self _age_default_alias_0_5  (cost=0.00..15.71 rows=571 width=16)
                                       ->  Parallel Seq Scan on dup_edge _age_default_alias_0_6  (cost=0.00..15.71 rows=571 width=16)
                                       ->  Parallel Seq Scan on opt_match_e _age_default_alias_0_7  (cost=0.00..15.71 rows=571 width=16)
                                       ->  Parallel Seq Scan on _ag_label_edge _age_default_alias_0_1  (cost=0.00..0.00 rows=1 width=16)
                           ->  Sort  (cost=870.59..894.89 rows=9720 width=40)
                                 Sort Key: ((id(build_vertex(n.id, '21416'::oid, n.properties)))::graphid)
                                 ->  Result  (cost=0.00..226.80 rows=9720 width=40)
                                       ->  Append  (cost=0.00..226.80 rows=9720 width=40)
                                             ->  Seq Scan on _ag_label_vertex n_1  (cost=0.00..2.20 rows=120 width=40)
                                             ->  Seq Scan on v n_2  (cost=0.00..22.00 rows=1200 width=40)
                                             ->  Seq Scan on v1 n_3  (cost=0.00..22.00 rows=1200 width=40)
                                             ->  Seq Scan on v2 n_4  (cost=0.00..22.00 rows=1200 width=40)
                                             ->  Seq Scan on v3 n_5  (cost=0.00..22.00 rows=1200 width=40)
                                             ->  Seq Scan on loop n_6  (cost=0.00..22.00 rows=1200 width=40)
                                             ->  Seq Scan on duplicate n_7  (cost=0.00..22.00 rows=1200 width=40)
                                             ->  Seq Scan on other_v n_8  (cost=0.00..22.00 rows=1200 width=40)
                                             ->  Seq Scan on opt_match_v n_9  (cost=0.00..22.00 rows=1200 width=40)
                     ->  Parallel Hash  (cost=158.43..158.43 rows=4050 width=40)
                           ->  Parallel Append  (cost=0.00..158.43 rows=4050 width=40)
                                 ->  Parallel Seq Scan on v m_2  (cost=0.00..17.06 rows=706 width=40)
                                 ->  Parallel Seq Scan on v1 m_3  (cost=0.00..17.06 rows=706 width=40)
                                 ->  Parallel Seq Scan on v2 m_4  (cost=0.00..17.06 rows=706 width=40)
                                 ->  Parallel Seq Scan on v3 m_5  (cost=0.00..17.06 rows=706 width=40)
                                 ->  Parallel Seq Scan on loop m_6  (cost=0.00..17.06 rows=706 width=40)
                                 ->  Parallel Seq Scan on duplicate m_7  (cost=0.00..17.06 rows=706 width=40)
                                 ->  Parallel Seq Scan on other_v m_8  (cost=0.00..17.06 rows=706 width=40)
                                 ->  Parallel Seq Scan on opt_match_v m_9  (cost=0.00..17.06 rows=706 width=40)
                                 ->  Parallel Seq Scan on _ag_label_vertex m_1  (cost=0.00..1.71 rows=71 width=40)
(43 rows)

SELECT * FROM cypher('cypher_match', $$
        MATCH (n) MATCH (n)-[]-(m) ORDER BY m DESC RETURN m
$$) AS (n vertex);
                                 n                                 
-------------------------------------------------------------------
 {"id": 281474976710660, "label": "", "properties": {"name": "F"}}
 {"id": 281474976710661, "label": "", "properties": {"name": "T"}}
(2 rows)

SELECT * FROM cypher('cypher_match', $$
        MATCH (n) MATCH (n)-[]-(m) ORDER BY m ASC RETURN m
$$) AS (n vertex);
                                 n                                 
-------------------------------------------------------------------
 {"id": 281474976710661, "label": "", "properties": {"name": "T"}}
 {"id": 281474976710660, "label": "", "properties": {"name": "F"}}
(2 rows)

--
-- Clean up
--
SELECT drop_graph('opt_forms', true);
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to table opt_forms._ag_label_vertex
drop cascades to table opt_forms._ag_label_edge
drop cascades to table opt_forms."KNOWS"
NOTICE:  graph "opt_forms" has been dropped
 drop_graph 
------------
 
(1 row)

SELECT drop_graph('cypher_match', true);
NOTICE:  drop cascades to 16 other objects
DETAIL:  drop cascades to table cypher_match._ag_label_vertex
drop cascades to table cypher_match._ag_label_edge
drop cascades to table cypher_match.v
drop cascades to table cypher_match.v1
drop cascades to table cypher_match.e1
drop cascades to table cypher_match.v2
drop cascades to table cypher_match.e2
drop cascades to table cypher_match.v3
drop cascades to table cypher_match.e3
drop cascades to table cypher_match.loop
drop cascades to table cypher_match.self
drop cascades to table cypher_match.duplicate
drop cascades to table cypher_match.dup_edge
drop cascades to table cypher_match.other_v
drop cascades to table cypher_match.opt_match_v
drop cascades to table cypher_match.opt_match_e
NOTICE:  graph "cypher_match" has been dropped
 drop_graph 
------------
 
(1 row)

--
-- End
--
