/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
LOAD 'postgraph';
CREATE GRAPH cypher_match;
NOTICE:  graph "cypher_match" has been created
 create_graph 
--------------
 
(1 row)

USE GRAPH cypher_match;
 use_graph 
-----------
 
(1 row)

CREATE (:v);
--
(0 rows)

CREATE (:v {i: 0});
--
(0 rows)

CREATE (:v {i: 1});
--
(0 rows)

MATCH (n:v) RETURN n;
                               n                               
---------------------------------------------------------------
 {"id": 844424930131969, "label": "v", "properties": {}}
 {"id": 844424930131970, "label": "v", "properties": {"i": 0}}
 {"id": 844424930131971, "label": "v", "properties": {"i": 1}}
(3 rows)

MATCH (n:v) RETURN n.i;
ERROR:  operator does not exist: postgraph.vertex -> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (n:v) WHERE n.i > 0
RETURN n.i;
ERROR:  operator does not exist: postgraph.gtype -> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
--Directed Paths
CREATE (:v1 {id:'initial'})-[:e1]->(:v1 {id:'middle'})-[:e1]->(:v1 {id:'end'});
--
(0 rows)

--Undirected Path Tests
MATCH p=(:v1)-[:e1]-(:v1)-[:e1]-(:v1) RETURN p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH p=(a:v1)-[]-()-[]-() RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()-[]-()-[]-(a:v1) RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()-[]-(a:v1)-[]-() RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()-[b:e1]-()-[]-() RETURN b;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (a:v1)-[]->(), ()-[]->(a) RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH p=()-[e]-() RETURN e;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
-- Right Path Test
MATCH (a:v1)-[:e1]->(b:v1)-[:e1]->(c:v1) RETURN a, b, c;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH p=(a:v1)-[]-()-[]->() RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH p=(a:v1)-[]->()-[]-() RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()-[]-()-[]->(a:v1) RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()-[]-(a:v1)-[]->() RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()-[b:e1]-()-[]->() RETURN b;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
--Left Path Test
MATCH (a:v1)<-[:e1]-(b:v1)<-[:e1]-(c:v1) RETURN a, b, c;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH p=(a:v1)<-[]-()-[]-() RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH p=(a:v1)-[]-()<-[]-() RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()<-[]-()-[]-(a:v1) RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()<-[]-(a:v1)-[]-() RETURN a;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()<-[b:e1]-()-[]-() RETURN b;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
--Divergent Path Tests
CREATE (:v2 {id:'initial'})<-[:e2]-(:v2 {id:'middle'})-[:e2]->(:v2 {id:'end'});
--
(0 rows)

MATCH ()<-[]-(n:v2)-[]->() MATCH p=()-[]->(n) RETURN p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()<-[]-(n:v2)-[]->() MATCH p=(n)-[]->() RETURN p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()-[]-(n:v2) RETURN n;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
--Convergent Path Tests
CREATE (:v3 {id:'initial'})-[:e3]->(:v3 {id:'middle'})<-[:e3]-(:v3 {id:'end'});
--
(0 rows)

MATCH ()-[b:e1]->() RETURN b;
                                                          b                                                          
---------------------------------------------------------------------------------------------------------------------
 {"id": 1407374883553281, "start_id": 1125899906842626, "end_id": 1125899906842627, "label": "e1", "properties": {}}
 {"id": 1407374883553282, "start_id": 1125899906842625, "end_id": 1125899906842626, "label": "e1", "properties": {}}
(2 rows)

MATCH ()-[]->(n:v1)<-[]-() MATCH p=(n)<-[]-() RETURN p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()-[]->(n:v1)<-[]-() MATCH p=()-[]->(n) RETURN p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH ()-[]->(n:v1)<-[]-() MATCH p=(n)-[]->() RETURN p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH con_path=(a)-[]->()<-[]-() WHERE a.id = 'initial' RETURN con_path;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH div_path=(b)<-[]-()-[]->() WHERE b.id = 'initial' RETURN div_path;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
--Patterns
MATCH (a:v1), p=(a)-[]-()-[]-() WHERE a.id = 'initial' RETURN p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH con_path=(a)-[]->()<-[]-(), div_path=(b)<-[]-()-[]->() WHERE a.id = 'initial' AND b.id = 'initial' RETURN con_path, div_path;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (a:v), p=()-[]->()-[]->() RETURN a.i, p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
--Multiple Match Clauses
MATCH (a:v1) WHERE a.id = 'initial' MATCH p=(a)-[]-()-[]-() RETURN p;
ERROR:  operator does not exist: postgraph.gtype -> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (a:v) MATCH p=()-[]->()-[]->() RETURN a.i, p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (a:v) MATCH (b:v1)-[]-(c) RETURN a.i, b.id, c.id;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
--
-- Property constraints
--
CREATE ({string_key: "test", int_key: 1, float_key: 3.14, map_key: {key: "value"}, list_key: [1, 2, 3]});
--
(0 rows)

CREATE ({lst: [1, NULL, 3.14, "string", {key: "value"}, []]});
--
(0 rows)

MATCH (n  {string_key: NULL}) RETURN n;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (n  {string_key: "wrong value"}) RETURN n ;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (n {string_key: "test", int_key: 1, float_key: 3.14, map_key: {key: "value"}, list_key: [1, 2, 3]}) RETURN n;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (n {string_key: "test"}) RETURN n;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (n {lst: [1, NULL, 3.14, "string", {key: "value"}, []]}) RETURN n;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (n {lst: [1, NULL, 3.14, "string", {key: "value"}, [], "extra value"]})  RETURN n;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
--
-- Path of one vertex.
--
MATCH p=() RETURN p;
                                                                                 p                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 281474976710657, "label": "", "properties": {"int_key": 1, "map_key": {"key": "value"}, "list_key": [1, 2, 3], "float_key": 3.14, "string_key": "test"}}]
 [{"id": 281474976710658, "label": "", "properties": {"lst": [1, null, 3.14, "string", {"key": "value"}, []]}}]
 [{"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}]
 [{"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}]
 [{"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}]
 [{"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}]
 [{"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}]
 [{"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}]
 [{"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}]
 [{"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}]
 [{"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}]
 [{"id": 844424930131969, "label": "v", "properties": {}}]
 [{"id": 844424930131970, "label": "v", "properties": {"i": 0}}]
 [{"id": 844424930131971, "label": "v", "properties": {"i": 1}}]
(14 rows)

--
-- MATCH with WHERE EXISTS(pattern)
--
MATCH (u)-[e]->(v) RETURN u, e, v ;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (u)-[e]->(v) WHERE EXISTS ((u)-[e]->(v)) RETURN u, e, v;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
-- Property Constraint in EXISTS
MATCH (u) WHERE EXISTS((u)-[]->({id: "middle"})) RETURN u;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (u) WHERE EXISTS((u)-[]->({id: "not a valid id"})) RETURN u;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (u) WHERE EXISTS((u)-[]->({id: NULL})) RETURN u;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
-- Exists checks for a loop. There shouldn't be any.
MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(u)) RETURN u, e, v ;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex, e edge, v vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex, e edge, v vertex);
        ^
-- Create a loop
CREATE (u:loop {id:'initial'})-[:self]->(u);
--
(0 rows)

-- dump paths
MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(v)) RETURN u, e, v ;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex, e edge, v vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex, e edge, v vertex);
        ^
-- Exists checks for a loop. There should be one.
MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(u)) RETURN u, e, v ;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex, e edge, v vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex, e edge, v vertex);
        ^
-- Exists checks for a loop. There should be one.
MATCH (u)-[e]->(v) WHERE EXISTS((v)-[e]->(v)) RETURN u, e, v ;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex, e edge, v vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex, e edge, v vertex);
        ^
-- Exists checks for a loop. There should be none because of edge uniqueness
-- requirement.
MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(u)-[e]->(u)) RETURN u, e, v ;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex, e edge, v vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex, e edge, v vertex);
        ^
MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(u)) AND EXISTS((v)-[e]->(v)) RETURN u, e, v ;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex, e edge, v vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex, e edge, v vertex);
        ^
MATCH (u)-[e]->(v) WHERE EXISTS((u)-[e]->(x)) RETURN u, e, v ;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex, e edge, v vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex, e edge, v vertex);
        ^
MATCH (u) WHERE EXISTS(MATCH (u)-[]->({id: "middle"}) RETURN 1) RETURN u ;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
MATCH (u) WHERE EXISTS(MATCH (u)-[]->({id: "middle"}) RETURN u) RETURN u ;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
MATCH (u) WHERE u.id = ANY (MATCH (v) RETURN v.id) RETURN u ;
ERROR:  operator does not exist: postgraph.vertex -> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
MATCH (u) WHERE u.id = ANY (MATCH (v) RETURN NULL) RETURN u ;
ERROR:  operator does not exist: postgraph.gtype -> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
MATCH (u) WHERE u.id = SOME (MATCH (v) RETURN v.id) RETURN u ;
ERROR:  operator does not exist: postgraph.vertex -> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
MATCH (u) WHERE u.id = ALL (MATCH (v) RETURN v.id) RETURN u ;
ERROR:  operator does not exist: postgraph.vertex -> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
MATCH (u)
WHERE EXISTS(
	MATCH (u)-[]->(v) 
	WHERE v.id = "middle"
	RETURN 1
    )
RETURN u;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
MATCH (u) WHERE EXISTS(MATCH (u)-[]->({id: "gsjka"}) RETURN 1) RETURN u ;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
MATCH (u) WHERE EXISTS(MATCH (v {id: 'middle'}) MATCH (u)-[]->(v) RETURN 1) RETURN u ;
ERROR:  operator does not exist: postgraph.gtype @> postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
EXPLAIN 
MATCH (u) WHERE EXISTS(MATCH (v {id: 'middle'}) MATCH (u)-[]->(v) RETURN 1) RETURN u ;
ERROR:  syntax error at or near "EXPLAIN"
LINE 1: EXPLAIN 
        ^
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
EXPLAIN
MATCH (u) WHERE EXISTS(MATCH (u)-[]->(v {id: 'middle'}) RETURN 1) RETURN u ;
ERROR:  syntax error at or near "EXPLAIN"
LINE 1: EXPLAIN
        ^
AS (u vertex);
ERROR:  syntax error at or near "AS"
LINE 1: AS (u vertex);
        ^
MATCH (u) 
RETURN case WHEN EXISTS(MATCH (u)-[]->({id: "gsjka"}) RETURN 1) THEN 1 ELSE 2 END
)
AS (u gtype);
ERROR:  syntax error at or near ")"
LINE 3: )
        ^
MATCH (u)
RETURN case WHEN EXISTS(MATCH (u)-[]->() RETURN 1) THEN 1 ELSE 2 END
)
AS (u gtype);
ERROR:  syntax error at or near ")"
LINE 3: )
        ^
EXPLAIN 
MATCH (u)
RETURN case WHEN EXISTS(MATCH (u)-[]->() RETURN 1) THEN 1 ELSE 2 END
)
AS (u gtype);
ERROR:  syntax error at or near "EXPLAIN"
LINE 1: EXPLAIN 
        ^
MATCH (u)
RETURN case WHEN EXISTS((u)-[]->()) THEN 1 ELSE 2 END
)
AS (u gtype);
ERROR:  syntax error at or near ")"
LINE 3: )
        ^
EXPLAIN
SELECT *
FROM cypher_match._ag_label_vertex as v
WHERE EXISTS (
SELECT * FROM cypher_match._ag_label_edge as e WHERE v.id = e.start_id
);
ERROR:  syntax error at or near "EXPLAIN"
LINE 1: EXPLAIN
        ^
EXPLAIN
SELECT *
FROM cypher_match._ag_label_vertex as u
WHERE EXISTS (
SELECT * FROM cypher_match._ag_label_edge as e 
JOIN cypher_match._ag_label_vertex as v ON v.id = e.end_id
WHERE u.id = e.start_id
);
ERROR:  syntax error at or near "EXPLAIN"
LINE 1: EXPLAIN
        ^
--
--Distinct
--
MATCH (u) RETURN DISTINCT props(u);
ERROR:  function postgraph.props(postgraph.vertex) does not exist
LINE 1: MATCH (u) RETURN DISTINCT props(u);
                                  ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
CREATE (u:duplicate)-[:dup_edge {id:1 }]->(:other_v);
--
(0 rows)

	MATCH (u:duplicate)
	CREATE (u)-[:dup_edge {id:2 }]->(:other_v);
--
(0 rows)

	MATCH (u:duplicate)-[]-(:other_v)
	RETURN DISTINCT u;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
	MATCH p=(:duplicate)-[]-(:other_v)
	RETURN DISTINCT p;
ERROR:  operator does not exist: postgraph.graphid = postgraph.graphid
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
--
-- Limit
--
	MATCH (u)
	RETURN u;
                                                                                u                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {"int_key": 1, "map_key": {"key": "value"}, "list_key": [1, 2, 3], "float_key": 3.14, "string_key": "test"}}
 {"id": 281474976710658, "label": "", "properties": {"lst": [1, null, 3.14, "string", {"key": "value"}, []]}}
 {"id": 844424930131969, "label": "v", "properties": {}}
 {"id": 844424930131970, "label": "v", "properties": {"i": 0}}
 {"id": 844424930131971, "label": "v", "properties": {"i": 1}}
 {"id": 1125899906842625, "label": "v1", "properties": {"id": "initial"}}
 {"id": 1125899906842626, "label": "v1", "properties": {"id": "middle"}}
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
 {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
 {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
 {"id": 3377699720527873, "label": "duplicate", "properties": {}}
 {"id": 3940649673949185, "label": "other_v", "properties": {}}
 {"id": 3940649673949186, "label": "other_v", "properties": {}}
(18 rows)

	MATCH (u)
	RETURN u LIMIT 3;
                                                                                u                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {"int_key": 1, "map_key": {"key": "value"}, "list_key": [1, 2, 3], "float_key": 3.14, "string_key": "test"}}
 {"id": 281474976710658, "label": "", "properties": {"lst": [1, null, 3.14, "string", {"key": "value"}, []]}}
 {"id": 844424930131969, "label": "v", "properties": {}}
(3 rows)

--
-- Skip
--
	MATCH (u)
	RETURN u SKIP 7;
                                     u                                      
----------------------------------------------------------------------------
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
 {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
 {"id": 1688849860263939, "label": "v2", "properties": {"id": "end"}}
 {"id": 2251799813685249, "label": "v3", "properties": {"id": "initial"}}
 {"id": 2251799813685250, "label": "v3", "properties": {"id": "middle"}}
 {"id": 2251799813685251, "label": "v3", "properties": {"id": "end"}}
 {"id": 2814749767106561, "label": "loop", "properties": {"id": "initial"}}
 {"id": 3377699720527873, "label": "duplicate", "properties": {}}
 {"id": 3940649673949185, "label": "other_v", "properties": {}}
 {"id": 3940649673949186, "label": "other_v", "properties": {}}
(11 rows)

	MATCH (u)
	RETURN u SKIP 7 LIMIT 3;
                                    u                                     
--------------------------------------------------------------------------
 {"id": 1125899906842627, "label": "v1", "properties": {"id": "end"}}
 {"id": 1688849860263937, "label": "v2", "properties": {"id": "initial"}}
 {"id": 1688849860263938, "label": "v2", "properties": {"id": "middle"}}
(3 rows)

--
-- Optional Match
--
CREATE (:opt_match_v {name: 'someone'})-[:opt_match_e]->(:opt_match_v {name: 'somebody'}),
           (:opt_match_v {name: 'anybody'})-[:opt_match_e]->(:opt_match_v {name: 'nobody'});
--
(0 rows)

MATCH (u:opt_match_v)
OPTIONAL MATCH (u)-[m]-(l)
RETURN u.name as u, type(m), l.name as l
ORDER BY u, m, l;
ERROR:  operator does not exist: postgraph.graphid = postgraph.gtype
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
OPTIONAL MATCH (n:opt_match_v)-[r]->(p), (m:opt_match_v)-[s]->(q)
WHERE id(n) <> id(m)
RETURN n.name as n, type(r;
           m.name AS m, type(s;
ORDER BY n, p, m, q;
MATCH (n:opt_match_v), (m:opt_match_v)
WHERE id(n) <> id(m)
OPTIONAL MATCH (n)-[r]->(p), (m)-[s]->(q)
RETURN n.name AS n, type(r;
           m.name AS m, type(s;
ORDER BY n, p, m, q;
-- Prepare
CREATE (u {name: "orphan"})
CREATE (u1 {name: "F"})-[u2:e1]->(u3 {name: "T"})
RETURN u1, u2, u3;
-- Querying NOT EXISTS syntax
MATCH (f),(t)
WHERE NOT EXISTS((f)-[]->(t))
RETURN f.name, t.name;
-- Querying EXISTS syntax
MATCH (f),(t)
WHERE EXISTS((f)-[]->(t))
RETURN f.name, t.name;
--
-- Constraints and WHERE clause together
--
CREATE ({i: 1, j: 2, k: 3}), ({i: 1, j: 3}), ({i:2, k: 3});
MATCH (n {j: 2}) WHERE n.i = 1 RETURN n;
--
-- ORDER BY
--
MATCH (n) ORDER BY n.i RETURN n;
MATCH (n) MATCH (n)-[]->(m) ORDER BY m RETURN n;
MATCH (n) MATCH (n)-[]-(m) ORDER BY m DESC RETURN m;
MATCH (n) MATCH (n)-[]-(m) ORDER BY m ASC RETURN m;
--
-- Prepared Statement Property Constraint
--
-- TODO
--
-- Errors
--
-- need a following RETURN clause
MATCH (n:v);
--Invalid Variables
MATCH (a)-[]-()-[]-(a:v1) RETURN a;
MATCH (a:v1)-[]-()-[a]-() RETURN a;
MATCH (a:v1)-[]-()-[]-(a {id:'will_fail'}) RETURN a;
--Incorrect Labels
MATCH (n)-[:v]-() RETURN n;
MATCH (n)-[:emissing]-() RETURN n;
MATCH (n:e1)-[]-() RETURN n;
MATCH (n:vmissing)-[]-() RETURN n;
--
-- Clean up
--
DROP GRAPH cypher_match CASCADE;
--
-- End
--
ERROR:  syntax error at or near ";"
LINE 3: RETURN n.name as n, type(r;
                                  ^
