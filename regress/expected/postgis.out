/*
 * PostGraph
 * Copyright (C) 2023 PostGraphDB
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
SET extra_float_digits = 0;
LOAD 'postgraph';
LOAD 'postgis-3';
SET search_path TO postgraph, public;
set timezone TO 'GMT';
SELECT * FROM create_graph('postgis');
NOTICE:  graph "postgis" has been created
 create_graph 
--------------
 
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'box(1 2, 5 6)'::box2d$$) AS r(c gtype);
      c       
--------------
 BOX(1 2,5 6)
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'BOX3D(1 2 3, 4 5 6)'::box3d$$) AS r(c gtype);
         c          
--------------------
 BOX3D(1 2 3,4 5 6)
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'SPHEROID["WGS 84",6378137,298.257223563]'::spheroid$$) AS r(c gtype);
                    c                     
------------------------------------------
 SPHEROID("WGS 84",6378137,298.257223563)
(1 row)

--
-- I/O Routines
--
-- NOTE: The first two queries for each type is the PostGIS Geometry type, used to validate I/O is exactly the same
--
-- Point (2 Dimensional) I/O
SELECT 'POINT( 1 2 )'::geometry;
                  geometry                  
--------------------------------------------
 0101000000000000000000F03F0000000000000040
(1 row)

SELECT ST_AsEWKT('POINT( 1 2 )'::geometry);
 st_asewkt  
------------
 POINT(1 2)
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'POINT( 1 2 )'::geometry$$) AS r(c gtype);
                     c                      
--------------------------------------------
 0101000000000000000000F03F0000000000000040
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('POINT( 1 2 )'::geometry) $$) AS r(c gtype);
      c       
--------------
 "POINT(1 2)"
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('POINT( 1 2 )') $$) AS r(c gtype);
      c       
--------------
 "POINT(1 2)"
(1 row)

-- Point (3 Dimensional) I/O
SELECT 'POINT( 1 2 3 )'::geometry;
                          geometry                          
------------------------------------------------------------
 0101000080000000000000F03F00000000000000400000000000000840
(1 row)

SELECT ST_AsEWKT('POINT( 1 2 3)'::geometry);
  st_asewkt   
--------------
 POINT(1 2 3)
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'POINT( 1 2 3 )'::geometry$$) AS r(c gtype);
                             c                              
------------------------------------------------------------
 0101000080000000000000F03F00000000000000400000000000000840
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('POINT( 1 2 3 )'::geometry) $$) AS r(c gtype);
       c        
----------------
 "POINT(1 2 3)"
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('POINT( 1 2 3 )') $$) AS r(c gtype);
       c        
----------------
 "POINT(1 2 3)"
(1 row)

-- LineString (2D, 4 Points) I/O
SELECT 'LINESTRING (0 0, 1 1, 2 2, 3 3 , 4 4)'::geometry;
                                                                                      geometry                                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 01020000000500000000000000000000000000000000000000000000000000F03F000000000000F03F000000000000004000000000000000400000000000000840000000000000084000000000000010400000000000001040
(1 row)

SELECT ST_AsEWKT('LINESTRING (0 0, 1 1, 2 2, 3 3 , 4 4)'::geometry);
            st_asewkt            
---------------------------------
 LINESTRING(0 0,1 1,2 2,3 3,4 4)
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'LINESTRING (0 0, 1 1, 2 2, 3 3 , 4 4)'::geometry$$) AS r(c gtype);
                                                                                         c                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 01020000000500000000000000000000000000000000000000000000000000F03F000000000000F03F000000000000004000000000000000400000000000000840000000000000084000000000000010400000000000001040
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('LINESTRING (0 0, 1 1, 2 2, 3 3 , 4 4)'::geometry) $$) AS r(c gtype);
                 c                 
-----------------------------------
 "LINESTRING(0 0,1 1,2 2,3 3,4 4)"
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('LINESTRING (0 0, 1 1, 2 2, 3 3 , 4 4)') $$) AS r(c gtype);
                 c                 
-----------------------------------
 "LINESTRING(0 0,1 1,2 2,3 3,4 4)"
(1 row)

-- LineString (3D, 4 Points) I/O
SELECT 'LINESTRING (0 0 0, 1 1 1, 2 2 2, 3 3 3, 4 4 4)'::geometry;
                                                                                                                              geometry                                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 010200008005000000000000000000000000000000000000000000000000000000000000000000F03F000000000000F03F000000000000F03F000000000000004000000000000000400000000000000040000000000000084000000000000008400000000000000840000000000000104000000000000010400000000000001040
(1 row)

SELECT ST_AsEWKT('LINESTRING (0 0 0, 1 1 1, 2 2 2, 3 3 3 , 4 4 4)'::geometry);
                 st_asewkt                 
-------------------------------------------
 LINESTRING(0 0 0,1 1 1,2 2 2,3 3 3,4 4 4)
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'LINESTRING (0 0 0, 1 1 1, 2 2 2, 3 3 3 , 4 4 4)'::geometry$$) AS r(c gtype);
                                                                                                                                 c                                                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 010200008005000000000000000000000000000000000000000000000000000000000000000000F03F000000000000F03F000000000000F03F000000000000004000000000000000400000000000000040000000000000084000000000000008400000000000000840000000000000104000000000000010400000000000001040
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('LINESTRING (0 0 0, 1 1 1, 2 2 2, 3 3 3, 4 4 4)'::geometry) $$) AS r(c gtype);
                      c                      
---------------------------------------------
 "LINESTRING(0 0 0,1 1 1,2 2 2,3 3 3,4 4 4)"
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('LINESTRING (0 0 0, 1 1 1, 2 2 2, 3 3 3 , 4 4 4)') $$) AS r(c gtype);
                      c                      
---------------------------------------------
 "LINESTRING(0 0 0,1 1 1,2 2 2,3 3 3,4 4 4)"
(1 row)

-- LineString (3D, 2 Points) I/O
SELECT 'LINESTRING (1 2 3, 10 20 30)'::geometry;
                                                      geometry                                                      
--------------------------------------------------------------------------------------------------------------------
 010200008002000000000000000000F03F00000000000000400000000000000840000000000000244000000000000034400000000000003E40
(1 row)

SELECT ST_AsEWKT('LINESTRING (1 2 3, 10 20 30)'::geometry);
         st_asewkt          
----------------------------
 LINESTRING(1 2 3,10 20 30)
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'LINESTRING (1 2 3, 10 20 30)'::geometry$$) AS r(c gtype);
                                                         c                                                          
--------------------------------------------------------------------------------------------------------------------
 010200008002000000000000000000F03F00000000000000400000000000000840000000000000244000000000000034400000000000003E40
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('LINESTRING (1 2 3, 10 20 30)'::geometry) $$) AS r(c gtype);
              c               
------------------------------
 "LINESTRING(1 2 3,10 20 30)"
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('LINESTRING (1 2 3, 10 20 30)') $$) AS r(c gtype);
              c               
------------------------------
 "LINESTRING(1 2 3,10 20 30)"
(1 row)

-- Polygon (2D) I/O
SELECT 'POLYGON( (0 0, 10 0, 10 10, 0 10, 0 0) )'::geometry;
                                                                                          geometry                                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 010300000001000000050000000000000000000000000000000000000000000000000024400000000000000000000000000000244000000000000024400000000000000000000000000000244000000000000000000000000000000000
(1 row)

SELECT ST_AsEWKT('POLYGON( (0 0, 10 0, 10 10, 0 10, 0 0) )'::geometry);
             st_asewkt              
------------------------------------
 POLYGON((0 0,10 0,10 10,0 10,0 0))
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'POLYGON( (0 0, 10 0, 10 10, 0 10, 0 0) )'::geometry$$) AS r(c gtype);
                                                                                             c                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 010300000001000000050000000000000000000000000000000000000000000000000024400000000000000000000000000000244000000000000024400000000000000000000000000000244000000000000000000000000000000000
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('POLYGON( (0 0, 10 0, 10 10, 0 10, 0 0) )'::geometry) $$) AS r(c gtype);
                  c                   
--------------------------------------
 "POLYGON((0 0,10 0,10 10,0 10,0 0))"
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('POLYGON( (0 0, 10 0, 10 10, 0 10, 0 0) )') $$) AS r(c gtype);
                  c                   
--------------------------------------
 "POLYGON((0 0,10 0,10 10,0 10,0 0))"
(1 row)

-- Polygon (3D) I/O
SELECT 'POLYGON( (0 0 1 , 10 0 1, 10 10 1, 0 10 1, 0 0 1) )'::geometry;
                                                                                                                                  geometry                                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 0103000080010000000500000000000000000000000000000000000000000000000000F03F00000000000024400000000000000000000000000000F03F00000000000024400000000000002440000000000000F03F00000000000000000000000000002440000000000000F03F00000000000000000000000000000000000000000000F03F
(1 row)

SELECT ST_AsEWKT('POLYGON( (0 0 1 , 10 0 1, 10 10 1, 0 10 1, 0 0 1) )'::geometry);
                  st_asewkt                   
----------------------------------------------
 POLYGON((0 0 1,10 0 1,10 10 1,0 10 1,0 0 1))
(1 row)

SELECT * FROM cypher('postgis', $$RETURN 'POLYGON( (0 0 1 , 10 0 1, 10 10 1, 0 10 1, 0 0 1) )'::geometry$$) AS r(c gtype);
                                                                                                                                     c                                                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 0103000080010000000500000000000000000000000000000000000000000000000000F03F00000000000024400000000000000000000000000000F03F00000000000024400000000000002440000000000000F03F00000000000000000000000000002440000000000000F03F00000000000000000000000000000000000000000000F03F
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('POLYGON( (0 0 1 , 10 0 1, 10 10 1, 0 10 1, 0 0 1) )'::geometry) $$) AS r(c gtype);
                       c                        
------------------------------------------------
 "POLYGON((0 0 1,10 0 1,10 10 1,0 10 1,0 0 1))"
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEWKT('POLYGON( (0 0 1 , 10 0 1, 10 10 1, 0 10 1, 0 0 1) )') $$) AS r(c gtype);
                       c                        
------------------------------------------------
 "POLYGON((0 0 1,10 0 1,10 10 1,0 10 1,0 0 1))"
(1 row)

--
-- Constructors
--
--
-- ST_MakePoint
--
SELECT ST_MakePoint(1, 0);
                st_makepoint                
--------------------------------------------
 0101000000000000000000F03F0000000000000000
(1 row)

SELECT ST_MakePoint(1, 0, 2);
                        st_makepoint                        
------------------------------------------------------------
 0101000080000000000000F03F00000000000000000000000000000040
(1 row)

SELECT ST_MakePoint(1, 0, 2, 3);
                                st_makepoint                                
----------------------------------------------------------------------------
 01010000C0000000000000F03F000000000000000000000000000000400000000000000840
(1 row)

SELECT * FROM cypher('postgis', $$ RETURN ST_MakePoint(1, 0) $$) AS r(c gtype);
                     c                      
--------------------------------------------
 0101000000000000000000F03F0000000000000000
(1 row)

SELECT * FROM cypher('postgis', $$ RETURN ST_MakePoint(1, 0, 2) $$) AS r(c gtype);
                             c                              
------------------------------------------------------------
 0101000080000000000000F03F00000000000000000000000000000040
(1 row)

SELECT * FROM cypher('postgis', $$ RETURN ST_MakePoint(1, 0, 2, 3) $$) AS r(c gtype);
                                     c                                      
----------------------------------------------------------------------------
 01010000C0000000000000F03F000000000000000000000000000000400000000000000840
(1 row)

--
-- ST_MakePointM
--
SELECT ST_MakePointM(1, 0, 2);
                       st_makepointm                        
------------------------------------------------------------
 0101000040000000000000F03F00000000000000000000000000000040
(1 row)

SELECT * FROM cypher('postgis', $$ RETURN ST_MakePointM(1, 0, 2) $$) AS r(c gtype);
                             c                              
------------------------------------------------------------
 0101000040000000000000F03F00000000000000000000000000000040
(1 row)

--
-- addbbox
--
SELECT ST_AsEwkt(postgis_addbbox('SRID=4326;POINT(1e+15 1e+15)'::geometry));
          st_asewkt           
------------------------------
 SRID=4326;POINT(1e+15 1e+15)
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_AsEwkt(postgis_addbbox('SRID=4326;POINT(1e+15 1e+15)'::geometry)) $$) AS r(c gtype);
               c                
--------------------------------
 "SRID=4326;POINT(1e+15 1e+15)"
(1 row)

--
-- Point Cordinates
--
--
-- ST_X
--
SELECT ST_X('POINT (0 0)'::geometry);
 st_x 
------
    0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_X('POINT (0 0)'::geometry) $$) AS r(c gtype);
  c  
-----
 0.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN X('POINT (0 0)'::geometry) $$) AS r(c gtype);
  c  
-----
 0.0
(1 row)

SELECT ST_X('POINTZ (1 2 3)'::geometry);
 st_x 
------
    1
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_X('POINTZ (1 2 3)'::geometry) $$) AS r(c gtype);
  c  
-----
 1.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN X('POINTZ (1 2 3)'::geometry) $$) AS r(c gtype);
  c  
-----
 1.0
(1 row)

SELECT ST_X('POINTM (6 7 8)'::geometry);
 st_x 
------
    6
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_X('POINTM (6 7 8)'::geometry) $$) AS r(c gtype);
  c  
-----
 6.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN X('POINTM (6 7 8)'::geometry) $$) AS r(c gtype);
  c  
-----
 6.0
(1 row)

SELECT ST_X('POINTZM (10 11 12 13)'::geometry);
 st_x 
------
   10
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_X('POINTZM (10 11 12 13)'::geometry) $$) AS r(c gtype);
  c   
------
 10.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN X('POINTZM (10 11 12 13)'::geometry) $$) AS r(c gtype);
  c   
------
 10.0
(1 row)

SELECT ST_X('MULTIPOINT ((0 0), (1 1))'::geometry);
ERROR:  Argument to ST_X() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_X('MULTIPOINT ((0 0), (1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_X() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN X('MULTIPOINT ((0 0), (1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_X() must have type POINT
SELECT ST_X('LINESTRING (0 0, 1 1)'::geometry);
ERROR:  Argument to ST_X() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_X('LINESTRING (0 0, 1 1)'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_X() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN X('LINESTRING (0 0, 1 1)'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_X() must have type POINT
SELECT ST_X('GEOMETRYCOLLECTION (POINT(0 0))'::geometry);
ERROR:  Argument to ST_X() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_X('GEOMETRYCOLLECTION (POINT(0 0))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_X() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN X('GEOMETRYCOLLECTION (POINT(0 0))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_X() must have type POINT
SELECT ST_X('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry);
ERROR:  Argument to ST_X() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_X('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_X() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN X('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_X() must have type POINT
--
-- ST_Y
--
SELECT ST_Y('POINT (0 0)'::geometry);
 st_y 
------
    0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_Y('POINT (0 0)'::geometry) $$) AS r(c gtype);
  c  
-----
 0.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN Y('POINT (0 0)'::geometry) $$) AS r(c gtype);
  c  
-----
 0.0
(1 row)

SELECT ST_Y('POINTZ (1 2 3)'::geometry);
 st_y 
------
    2
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_Y('POINTZ (1 2 3)'::geometry) $$) AS r(c gtype);
  c  
-----
 2.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN Y('POINTZ (1 2 3)'::geometry) $$) AS r(c gtype);
  c  
-----
 2.0
(1 row)

SELECT ST_Y('POINTM (6 7 8)'::geometry);
 st_y 
------
    7
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_Y('POINTM (6 7 8)'::geometry) $$) AS r(c gtype);
  c  
-----
 7.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN Y('POINTM (6 7 8)'::geometry) $$) AS r(c gtype);
  c  
-----
 7.0
(1 row)

SELECT ST_Y('POINTZM (10 11 12 13)'::geometry);
 st_y 
------
   11
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_Y('POINTZM (10 11 12 13)'::geometry) $$) AS r(c gtype);
  c   
------
 11.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN Y('POINTZM (10 11 12 13)'::geometry) $$) AS r(c gtype);
  c   
------
 11.0
(1 row)

SELECT ST_Y('MULTIPOINT ((0 0), (1 1))'::geometry);
ERROR:  Argument to ST_Y() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_Y('MULTIPOINT ((0 0), (1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Y() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN Y('MULTIPOINT ((0 0), (1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Y() must have type POINT
SELECT ST_Y('LINESTRING (0 0, 1 1)'::geometry);
ERROR:  Argument to ST_Y() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_Y('LINESTRING (0 0, 1 1)'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Y() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN Y('LINESTRING (0 0, 1 1)'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Y() must have type POINT
SELECT ST_Y('GEOMETRYCOLLECTION (POINT(0 0))'::geometry);
ERROR:  Argument to ST_Y() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_Y('GEOMETRYCOLLECTION (POINT(0 0))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Y() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN Y('GEOMETRYCOLLECTION (POINT(0 0))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Y() must have type POINT
SELECT ST_Y('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry);
ERROR:  Argument to ST_Y() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_Y('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Y() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN Y('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Y() must have type POINT
--
-- ST_Z
--
SELECT ST_Z('POINT (0 0)'::geometry);
 st_z 
------
     
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_Z('POINT (0 0)'::geometry) $$) AS r(c gtype);
 c 
---
 
(1 row)

SELECT * FROM cypher('postgis', $$RETURN Z('POINT (0 0)'::geometry) $$) AS r(c gtype);
 c 
---
 
(1 row)

SELECT ST_Z('POINTZ (1 2 3)'::geometry);
 st_z 
------
    3
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_Z('POINTZ (1 2 3)'::geometry) $$) AS r(c gtype);
  c  
-----
 3.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN Z('POINTZ (1 2 3)'::geometry) $$) AS r(c gtype);
  c  
-----
 3.0
(1 row)

SELECT ST_Z('POINTM (6 7 8)'::geometry);
 st_z 
------
     
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_Z('POINTM (6 7 8)'::geometry) $$) AS r(c gtype);
 c 
---
 
(1 row)

SELECT * FROM cypher('postgis', $$RETURN Z('POINTM (6 7 8)'::geometry) $$) AS r(c gtype);
 c 
---
 
(1 row)

SELECT ST_Z('POINTZM (10 11 12 13)'::geometry);
 st_z 
------
   12
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_Z('POINTZM (10 11 12 13)'::geometry) $$) AS r(c gtype);
  c   
------
 12.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN Z('POINTZM (10 11 12 13)'::geometry) $$) AS r(c gtype);
  c   
------
 12.0
(1 row)

SELECT ST_Z('MULTIPOINT ((0 0), (1 1))'::geometry);
ERROR:  Argument to ST_Z() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_Z('MULTIPOINT ((0 0), (1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Z() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN Z('MULTIPOINT ((0 0), (1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Z() must have type POINT
SELECT ST_Z('LINESTRING (0 0, 1 1)'::geometry);
ERROR:  Argument to ST_Z() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_Z('LINESTRING (0 0, 1 1)'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Z() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN Z('LINESTRING (0 0, 1 1)'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Z() must have type POINT
SELECT ST_Z('GEOMETRYCOLLECTION (POINT(0 0))'::geometry);
ERROR:  Argument to ST_Z() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_Z('GEOMETRYCOLLECTION (POINT(0 0))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Z() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN Z('GEOMETRYCOLLECTION (POINT(0 0))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Z() must have type POINT
SELECT ST_Z('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry);
ERROR:  Argument to ST_Z() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_Z('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Z() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN Z('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_Z() must have type POINT
--
-- ST_M
--
SELECT ST_M('POINT (0 0)'::geometry);
 st_m 
------
     
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_M('POINT (0 0)'::geometry) $$) AS r(c gtype);
 c 
---
 
(1 row)

SELECT * FROM cypher('postgis', $$RETURN M('POINT (0 0)'::geometry) $$) AS r(c gtype);
 c 
---
 
(1 row)

SELECT ST_M('POINTZ (1 2 3)'::geometry);
 st_m 
------
     
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_M('POINTZ (1 2 3)'::geometry) $$) AS r(c gtype);
 c 
---
 
(1 row)

SELECT * FROM cypher('postgis', $$RETURN M('POINTZ (1 2 3)'::geometry) $$) AS r(c gtype);
 c 
---
 
(1 row)

SELECT ST_M('POINTM (6 7 8)'::geometry);
 st_m 
------
    8
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_M('POINTM (6 7 8)'::geometry) $$) AS r(c gtype);
  c  
-----
 8.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN M('POINTM (6 7 8)'::geometry) $$) AS r(c gtype);
  c  
-----
 8.0
(1 row)

SELECT ST_M('POINTZM (10 11 12 13)'::geometry);
 st_m 
------
   13
(1 row)

SELECT * FROM cypher('postgis', $$RETURN ST_M('POINTZM (10 11 12 13)'::geometry) $$) AS r(c gtype);
  c   
------
 13.0
(1 row)

SELECT * FROM cypher('postgis', $$RETURN M('POINTZM (10 11 12 13)'::geometry) $$) AS r(c gtype);
  c   
------
 13.0
(1 row)

SELECT ST_M('MULTIPOINT ((0 0), (1 1))'::geometry);
ERROR:  Argument to ST_M() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_M('MULTIPOINT ((0 0), (1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_M() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN M('MULTIPOINT ((0 0), (1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_M() must have type POINT
SELECT ST_M('LINESTRING (0 0, 1 1)'::geometry);
ERROR:  Argument to ST_M() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_M('LINESTRING (0 0, 1 1)'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_M() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN M('LINESTRING (0 0, 1 1)'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_M() must have type POINT
SELECT ST_M('GEOMETRYCOLLECTION (POINT(0 0))'::geometry);
ERROR:  Argument to ST_M() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_M('GEOMETRYCOLLECTION (POINT(0 0))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_M() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN M('GEOMETRYCOLLECTION (POINT(0 0))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_M() must have type POINT
SELECT ST_M('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry);
ERROR:  Argument to ST_M() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN ST_M('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_M() must have type POINT
SELECT * FROM cypher('postgis', $$RETURN M('GEOMETRYCOLLECTION (POINT(0 1), LINESTRING(0 0, 1 1))'::geometry) $$) AS r(c gtype);
ERROR:  Argument to ST_M() must have type POINT
--
-- Temporal
--
--
-- ST_ClosestPointOfApproach
--
-- Converging
select ST_ClosestPointOfApproach( 'LINESTRINGZM(0 0 0 0, 10 10 10 10)', 'LINESTRINGZM(0 0 0 1, 10 10 10 10)'::geometry);
 st_closestpointofapproach 
---------------------------
                        10
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_ClosestPointOfApproach( 'LINESTRINGZM(0 0 0 0, 10 10 10 10)'::geometry, 'LINESTRINGZM(0 0 0 1, 10 10 10 10)')
$$) as (c gtype);
  c   
------
 10.0
(1 row)

-- Following
select ST_ClosestPointOfApproach( 'LINESTRINGZM(0 0 0 0, 10 10 10 10)', 'LINESTRINGZM(0 0 0 5, 10 10 10 15)'::geometry);
 st_closestpointofapproach 
---------------------------
                         5
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_ClosestPointOfApproach( 'LINESTRINGZM(0 0 0 0, 10 10 10 10)', 'LINESTRINGZM(0 0 0 5, 10 10 10 15)'::geometry)
$$) as (c gtype);
  c  
-----
 5.0
(1 row)

-- Crossing
select ST_ClosestPointOfApproach( 'LINESTRINGZM(0 0 0 0, 0 0 0 10)', 'LINESTRINGZM(-30 0 5 4, 10 0 5 6)'::geometry);
 st_closestpointofapproach 
---------------------------
                       5.5
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_ClosestPointOfApproach( 'LINESTRINGZM(0 0 0 0, 0 0 0 10)', 'LINESTRINGZM(-30 0 5 4, 10 0 5 6)'::geometry)
$$) as (c gtype);
  c  
-----
 5.5
(1 row)

-- Meeting
select ST_ClosestPointOfApproach( 'LINESTRINGZM(0 0 0 0, 0 0 0 10)', 'LINESTRINGZM(0 5 0 10, 10 0 5 11)'::geometry);
 st_closestpointofapproach 
---------------------------
                        10
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_ClosestPointOfApproach( 'LINESTRINGZM(0 0 0 0, 0 0 0 10)', 'LINESTRINGZM(0 5 0 10, 10 0 5 11)'::geometry)
$$) as (c gtype);
  c   
------
 10.0
(1 row)

-- Disjoint
select ST_ClosestPointOfApproach( 'LINESTRINGM(0 0 0, 0 0 4)', 'LINESTRINGM(0 0 5, 0 0 10)'::geometry);
 st_closestpointofapproach 
---------------------------
                          
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_ClosestPointOfApproach('LINESTRINGM(0 0 0, 0 0 4)', 'LINESTRINGM(0 0 5, 0 0 10)'::geometry)
$$) as (c gtype);
 c 
---
 
(1 row)

--
-- ST_DistanceCPA
--
-- Converging
select ST_DistanceCPA( 'LINESTRINGZM(0 0 0 0, 10 10 10 10)', 'LINESTRINGZM(0 0 0 1, 10 10 10 10)'::geometry);
 st_distancecpa 
----------------
              0
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_DistanceCPA( 'LINESTRINGZM(0 0 0 0, 10 10 10 10)'::geometry, 'LINESTRINGZM(0 0 0 1, 10 10 10 10)')
$$) as (c gtype);
  c  
-----
 0.0
(1 row)

-- Following
select ST_DistanceCPA( 'LINESTRINGZM(0 0 0 0, 10 10 10 10)', 'LINESTRINGZM(0 0 0 5, 10 10 10 15)'::geometry);
  st_distancecpa  
------------------
 8.66025403784439
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_DistanceCPA( 'LINESTRINGZM(0 0 0 0, 10 10 10 10)', 'LINESTRINGZM(0 0 0 5, 10 10 10 15)'::geometry)
$$) as (c gtype);
        c         
------------------
 8.66025403784439
(1 row)

-- Crossing
select ST_DistanceCPA( 'LINESTRINGZM(0 0 0 0, 0 0 0 10)', 'LINESTRINGZM(-30 0 5 4, 10 0 5 6)'::geometry);
 st_distancecpa 
----------------
              5
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_DistanceCPA( 'LINESTRINGZM(0 0 0 0, 0 0 0 10)', 'LINESTRINGZM(-30 0 5 4, 10 0 5 6)'::geometry)
$$) as (c gtype);
  c  
-----
 5.0
(1 row)

-- Meeting
select ST_DistanceCPA( 'LINESTRINGZM(0 0 0 0, 0 0 0 10)', 'LINESTRINGZM(0 5 0 10, 10 0 5 11)'::geometry);
 st_distancecpa 
----------------
              5
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_DistanceCPA( 'LINESTRINGZM(0 0 0 0, 0 0 0 10)', 'LINESTRINGZM(0 5 0 10, 10 0 5 11)'::geometry)
$$) as (c gtype);
  c  
-----
 5.0
(1 row)

-- Disjoint
select ST_DistanceCPA( 'LINESTRINGM(0 0 0, 0 0 4)', 'LINESTRINGM(0 0 5, 0 0 10)'::geometry);
 st_distancecpa 
----------------
               
(1 row)

select * FROM cypher('postgis', $$
    RETURN ST_DistanceCPA('LINESTRINGM(0 0 0, 0 0 4)', 'LINESTRINGM(0 0 5, 0 0 10)'::geometry)
$$) as (c gtype);
 c 
---
 
(1 row)

--
-- ST_IsValidTrajectory
--
SELECT ST_IsValidTrajectory('POINTM(0 0 0)'::geometry);
NOTICE:  Geometry is not a LINESTRING
 st_isvalidtrajectory 
----------------------
 f
(1 row)

SELECT ST_IsValidTrajectory('LINESTRINGZ(0 0 0,1 1 1)'::geometry);
NOTICE:  Line does not have M dimension
 st_isvalidtrajectory 
----------------------
 f
(1 row)

SELECT ST_IsValidTrajectory('LINESTRINGM(0 0 0,1 1 0)'::geometry);
NOTICE:  Measure of vertex 1 (0) not bigger than measure of vertex 0 (0)
 st_isvalidtrajectory 
----------------------
 f
(1 row)

SELECT ST_IsValidTrajectory('LINESTRINGM(0 0 1,1 1 0)'::geometry);
NOTICE:  Measure of vertex 1 (0) not bigger than measure of vertex 0 (1)
 st_isvalidtrajectory 
----------------------
 f
(1 row)

SELECT ST_IsValidTrajectory('LINESTRINGM(0 0 0,1 1 1,1 1 2,1 0 1)'::geometry);
NOTICE:  Measure of vertex 3 (1) not bigger than measure of vertex 2 (2)
 st_isvalidtrajectory 
----------------------
 f
(1 row)

SELECT ST_IsValidTrajectory('LINESTRINGM(0 0 0,1 1 1)'::geometry);
 st_isvalidtrajectory 
----------------------
 t
(1 row)

SELECT ST_IsValidTrajectory('LINESTRINGM EMPTY'::geometry);
 st_isvalidtrajectory 
----------------------
 t
(1 row)

SELECT ST_IsValidTrajectory('LINESTRINGM(0 0 0,1 1 1,1 1 2)'::geometry);
 st_isvalidtrajectory 
----------------------
 t
(1 row)

SELECT * FROM cypher('postgis', $$
    RETURN ST_IsValidTrajectory('POINTM(0 0 0)'::geometry)
$$) as (c gtype);
NOTICE:  Geometry is not a LINESTRING
   c   
-------
 false
(1 row)

SELECT * FROM cypher('postgis', $$
    RETURN ST_IsValidTrajectory('LINESTRINGZ(0 0 0,1 1 1)'::geometry)
$$) as (c gtype);
NOTICE:  Line does not have M dimension
   c   
-------
 false
(1 row)

SELECT * FROM cypher('postgis', $$
    RETURN ST_IsValidTrajectory('LINESTRINGM(0 0 0,1 1 0)'::geometry)
$$) as (c gtype);
NOTICE:  Measure of vertex 1 (0) not bigger than measure of vertex 0 (0)
   c   
-------
 false
(1 row)

SELECT * FROM cypher('postgis', $$
    RETURN ST_IsValidTrajectory('LINESTRINGM(0 0 1,1 1 0)'::geometry)
$$) as (c gtype);
NOTICE:  Measure of vertex 1 (0) not bigger than measure of vertex 0 (1)
   c   
-------
 false
(1 row)

SELECT * FROM cypher('postgis', $$
    RETURN ST_IsValidTrajectory('LINESTRINGM(0 0 0,1 1 1,1 1 2,1 0 1)'::geometry)
$$) as (c gtype);
NOTICE:  Measure of vertex 3 (1) not bigger than measure of vertex 2 (2)
   c   
-------
 false
(1 row)

SELECT * FROM cypher('postgis', $$
    RETURN ST_IsValidTrajectory('LINESTRINGM(0 0 0,1 1 1)'::geometry)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('postgis', $$
    RETURN ST_IsValidTrajectory('LINESTRINGM EMPTY'::geometry)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('postgis', $$
    RETURN ST_IsValidTrajectory('LINESTRINGM(0 0 0,1 1 1,1 1 2)'::geometry)
$$) as (c gtype);
  c   
------
 true
(1 row)

--
-- ST_CPAWithin
--
SELECT ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 0.0);
 st_cpawithin 
--------------
 t
(1 row)

SELECT ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 1.0);
 st_cpawithin 
--------------
 t
(1 row)

SELECT ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 0.5);
 st_cpawithin 
--------------
 t
(1 row)

SELECT ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 1);
 st_cpawithin 
--------------
 t
(1 row)

SELECT ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 2);
 st_cpawithin 
--------------
 t
(1 row)

SELECT ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 1.9);
 st_cpawithin 
--------------
 t
(1 row)

SELECT ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 2);
 st_cpawithin 
--------------
 t
(1 row)

SELECT ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 2.0001);
 st_cpawithin 
--------------
 t
(1 row)

-- temporary disjoint
SELECT ST_CPAWithin( 'LINESTRINGM(0 0 0, 10 0 10)'::geometry ,'LINESTRINGM(10 0 11, 10 10 20)'::geometry, 1e15);
 st_cpawithin 
--------------
 f
(1 row)

SELECT ST_CPAWithin( 'LINESTRING(0 0 0, 1 0 0)'::geometry ,'LINESTRING(0 0 3 0, 1 0 2 1)'::geometry, 1e16);
ERROR:  Both input geometries must have a measure dimension
SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 0.0)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 1.0)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 0.5)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 1)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 2)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 1.9)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 2)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRINGM(0 0 0, 1 0 1)'::geometry ,'LINESTRINGM(0 0 0, 1 0 1)'::geometry, 2.0001)
$$) as (c gtype);
  c   
------
 true
(1 row)

-- temporary disjoint
SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRINGM(0 0 0, 10 0 10)'::geometry ,'LINESTRINGM(10 0 11, 10 10 20)'::geometry, 1e15)
$$) as (c gtype);
  c   
------
 true
(1 row)

SELECT  * FROM cypher('postgis', $$
    RETURN ST_CPAWithin( 'LINESTRING(0 0 0, 1 0 0)'::geometry ,'LINESTRING(0 0 3 0, 1 0 2 1)'::geometry, 1e16)
$$) as (c gtype); --XXX
NOTICE:  Line does not have M dimension
   c   
-------
 false
(1 row)

--
--ST_GeneratePoints
--
SELECT ST_AsEWKT(ST_GeneratePoints('POLYGON((0 0,1 0,1 1,0 1,0 0))', 10));
                                                                                                                                                                                     st_asewkt                                                                                                                                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 MULTIPOINT(0.64160522672803 0.209528407148667,0.725589539393989 0.437295145123927,0.632273291583746 0.930896998441892,0.742400913702981 0.176301575569576,0.567825808778961 0.596164059828631,0.044488863141689 0.078360802491196,0.102172133676381 0.845389424446707,0.868183815135756 0.746760305238248,0.154332288595962 0.652783375304776,0.627755524602666 0.260350201028912)
(1 row)

SELECT  * FROM cypher('postgis', $$
    RETURN ST_AsEWKT(ST_GeneratePoints('POLYGON((0 0,1 0,1 1,0 1,0 0))', 10))
$$) as (c gtype);
                                                                                                                                                                                          c                                                                                                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 "MULTIPOINT(0.64160522672803 0.209528407148667,0.725589539393989 0.437295145123927,0.632273291583746 0.930896998441892,0.742400913702981 0.176301575569576,0.567825808778961 0.596164059828631,0.044488863141689 0.078360802491196,0.102172133676381 0.845389424446707,0.868183815135756 0.746760305238248,0.154332288595962 0.652783375304776,0.627755524602666 0.260350201028912)"
(1 row)

--
-- GEOS
--
--
-- ST_Intersection
--
SELECT ST_Intersection('MULTIPOINT ((0 0), (1 1))'::geometry, 'MULTIPOINT ((0 0), (1 1))'::geometry);
                                            st_intersection                                             
--------------------------------------------------------------------------------------------------------
 0104000000020000000101000000000000000000000000000000000000000101000000000000000000F03F000000000000F03F
(1 row)

SELECT ST_AsEWKT(ST_Intersection('MULTIPOINT ((0 0), (1 1))'::geometry, 'MULTIPOINT ((0 0), (1 1))'::geometry));
      st_asewkt      
---------------------
 MULTIPOINT(0 0,1 1)
(1 row)

SELECT * FROM cypher('postgis', $$
     RETURN ST_Intersection('MULTIPOINT ((0 0), (1 1))'::geometry, 'MULTIPOINT ((0 0), (1 1))'::geometry, -1.0)
$$) AS r(c gtype);
                                                   c                                                    
--------------------------------------------------------------------------------------------------------
 0104000000020000000101000000000000000000000000000000000000000101000000000000000000F03F000000000000F03F
(1 row)

SELECT * FROM cypher('postgis', $$
     RETURN ST_AsEWKT(ST_Intersection('MULTIPOINT ((0 0), (1 1))'::geometry, 'MULTIPOINT ((0 0), (1 1))'::geometry, -1.0))
$$) AS r(c gtype);
           c           
-----------------------
 "MULTIPOINT(0 0,1 1)"
(1 row)

SELECT * FROM cypher('postgis', $$
     RETURN ST_AsEWKT(ST_Intersection('MULTIPOINT ((2 2), (5 1))'::geometry, 'MULTIPOINT ((0 0), (1 1))'::geometry, -1.0))
$$) AS r(c gtype);
       c       
---------------
 "POINT EMPTY"
(1 row)

SELECT * FROM cypher('postgis', $$
     RETURN ST_AsEWKT(ST_Intersection('MULTIPOINT ((2 2), (5 1))'::geometry, 'MULTIPOINT ((0 0), (1 1))'::geometry))
$$) AS r(c gtype);
       c       
---------------
 "POINT EMPTY"
(1 row)

--
-- Algorithms
-- 
--
-- ST_Simplify
--
SELECT ST_AsEWKT(ST_Simplify('POLYGON((0 0,1 1,1 3,0 4,-2 3,-1 1,0 0))'::geometry, 1));
          st_asewkt          
-----------------------------
 POLYGON((0 0,0 4,-2 3,0 0))
(1 row)

SELECT ST_AsEWKT(ST_Simplify('POLYGON((0 0,1 1,1 3,2 3,2 0,0 0))'::geometry, 1));
         st_asewkt          
----------------------------
 POLYGON((0 0,2 3,2 0,0 0))
(1 row)

SELECT * FROM cypher('postgis', $$
     RETURN ST_AsEWKT(ST_Simplify('POLYGON((0 0,1 1,1 3,0 4,-2 3,-1 1,0 0))', 1))
$$) AS r(c gtype);
               c               
-------------------------------
 "POLYGON((0 0,0 4,-2 3,0 0))"
(1 row)

SELECT * FROM cypher('postgis', $$
     RETURN ST_AsEWKT(ST_Simplify('POLYGON((0 0,1 1,1 3,2 3,2 0,0 0))'::geometry, 1))
$$) AS r(c gtype);
              c               
------------------------------
 "POLYGON((0 0,2 3,2 0,0 0))"
(1 row)

SELECT * FROM drop_graph('postgis', true);
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to table postgis._ag_label_vertex
drop cascades to table postgis._ag_label_edge
NOTICE:  graph "postgis" has been dropped
 drop_graph 
------------
 
(1 row)

