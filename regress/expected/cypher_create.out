/*
 * Copyright (C) 2023-2024 PostGraphDB
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 * Portions Copyright (c) 2020-2023, Apache Software Foundation
 * Portions Copyright (c) 2019-2020, Bitnine Global
 */ 
LOAD 'postgraph';
CREATE GRAPH cypher_create;
NOTICE:  graph "cypher_create" has been created
 create_graph 
--------------
 
(1 row)

USE GRAPH cypher_create;
 use_graph 
-----------
 
(1 row)

CREATE ();
--
(0 rows)

CREATE (:v);
--
(0 rows)

CREATE (:v {});
--
(0 rows)

CREATE (:v {prop_key: 'value'});
--
(0 rows)

MATCH (n:v) RETURN n;
                                     n                                      
----------------------------------------------------------------------------
 {"id": 844424930131969, "label": "v", "properties": {}}
 {"id": 844424930131970, "label": "v", "properties": {}}
 {"id": 844424930131971, "label": "v", "properties": {"prop_key": "value"}}
(3 rows)

-- Left relationship
CREATE (:v {id:'right rel, initial node'})-[:e {id:'right rel'}]->(:v {id:'right rel, end node'});
--
(0 rows)

-- Right relationship
CREATE (:v {id:'left rel, initial node'})<-[:e {id:'left rel'}]-(:v {id:'left rel, end node'});
--
(0 rows)

-- Pattern creates a path from the initial node to the last node
CREATE (:v {id: 'path, initial node'})-[:e {id: 'path, edge one'}]->(:v {id:'path, middle node'})-[:e {id:'path, edge two'}]->(:v {id:'path, last node'});
--
(0 rows)

-- middle vertex points to the initial and last vertex
CREATE (:v {id: 'divergent, initial node'})<-[:e {id: 'divergent, edge one'}]-(:v {id: 'divergent middle node'})-[:e {id: 'divergent, edge two'}]->(:v {id: 'divergent, end node'});
--
(0 rows)

-- initial and last vertex point to the middle vertex
CREATE (:v {id: 'convergent, initial node'})-[:e {id: 'convergent, edge one'}]->(:v {id: 'convergent middle node'})<-[:e {id: 'convergent, edge two'}]-(:v {id: 'convergent, end node'});
--
(0 rows)

-- Validate Paths work correctly
CREATE (:v {id: 'paths, vertex one'})-[:e {id: 'paths, edge one'}]->(:v {id: 'paths, vertex two'}),
       (:v {id: 'paths, vertex three'})-[:e {id: 'paths, edge two'}]->(:v {id: 'paths, vertex four'});
--
(0 rows)

--edge with double relationship will throw an error
CREATE (:v)<-[:e]->();
ERROR:  syntax error at or near "->"
LINE 1: CREATE (:v)<-[:e]->();
                         ^
--edge with no relationship will throw an error
CREATE (:v)-[:e]-();
ERROR:  only directed relationships are allowed in CREATE
LINE 1: CREATE (:v)-[:e]-();
                    ^
--edges without labels are not supported
CREATE (:v)-[]->(:v);
ERROR:  relationships must be specify a label in CREATE.
LINE 1: CREATE (:v)-[]->(:v);
                    ^
MATCH (n) RETURN n;
                                            n                                            
-----------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {}}
 {"id": 844424930131969, "label": "v", "properties": {}}
 {"id": 844424930131970, "label": "v", "properties": {}}
 {"id": 844424930131971, "label": "v", "properties": {"prop_key": "value"}}
 {"id": 844424930131972, "label": "v", "properties": {"id": "right rel, initial node"}}
 {"id": 844424930131973, "label": "v", "properties": {"id": "right rel, end node"}}
 {"id": 844424930131974, "label": "v", "properties": {"id": "left rel, initial node"}}
 {"id": 844424930131975, "label": "v", "properties": {"id": "left rel, end node"}}
 {"id": 844424930131976, "label": "v", "properties": {"id": "path, initial node"}}
 {"id": 844424930131977, "label": "v", "properties": {"id": "path, middle node"}}
 {"id": 844424930131978, "label": "v", "properties": {"id": "path, last node"}}
 {"id": 844424930131979, "label": "v", "properties": {"id": "divergent, initial node"}}
 {"id": 844424930131980, "label": "v", "properties": {"id": "divergent middle node"}}
 {"id": 844424930131981, "label": "v", "properties": {"id": "divergent, end node"}}
 {"id": 844424930131982, "label": "v", "properties": {"id": "convergent, initial node"}}
 {"id": 844424930131983, "label": "v", "properties": {"id": "convergent middle node"}}
 {"id": 844424930131984, "label": "v", "properties": {"id": "convergent, end node"}}
 {"id": 844424930131985, "label": "v", "properties": {"id": "paths, vertex one"}}
 {"id": 844424930131986, "label": "v", "properties": {"id": "paths, vertex two"}}
 {"id": 844424930131987, "label": "v", "properties": {"id": "paths, vertex three"}}
 {"id": 844424930131988, "label": "v", "properties": {"id": "paths, vertex four"}}
(21 rows)

MATCH ()-[e]-() RETURN e;
                                                                      e                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 1125899906842625, "start_id": 844424930131972, "end_id": 844424930131973, "label": "e", "properties": {"id": "right rel"}}
 {"id": 1125899906842625, "start_id": 844424930131972, "end_id": 844424930131973, "label": "e", "properties": {"id": "right rel"}}
 {"id": 1125899906842626, "start_id": 844424930131975, "end_id": 844424930131974, "label": "e", "properties": {"id": "left rel"}}
 {"id": 1125899906842626, "start_id": 844424930131975, "end_id": 844424930131974, "label": "e", "properties": {"id": "left rel"}}
 {"id": 1125899906842627, "start_id": 844424930131977, "end_id": 844424930131978, "label": "e", "properties": {"id": "path, edge two"}}
 {"id": 1125899906842627, "start_id": 844424930131977, "end_id": 844424930131978, "label": "e", "properties": {"id": "path, edge two"}}
 {"id": 1125899906842628, "start_id": 844424930131976, "end_id": 844424930131977, "label": "e", "properties": {"id": "path, edge one"}}
 {"id": 1125899906842628, "start_id": 844424930131976, "end_id": 844424930131977, "label": "e", "properties": {"id": "path, edge one"}}
 {"id": 1125899906842629, "start_id": 844424930131980, "end_id": 844424930131981, "label": "e", "properties": {"id": "divergent, edge two"}}
 {"id": 1125899906842629, "start_id": 844424930131980, "end_id": 844424930131981, "label": "e", "properties": {"id": "divergent, edge two"}}
 {"id": 1125899906842630, "start_id": 844424930131980, "end_id": 844424930131979, "label": "e", "properties": {"id": "divergent, edge one"}}
 {"id": 1125899906842630, "start_id": 844424930131980, "end_id": 844424930131979, "label": "e", "properties": {"id": "divergent, edge one"}}
 {"id": 1125899906842631, "start_id": 844424930131984, "end_id": 844424930131983, "label": "e", "properties": {"id": "convergent, edge two"}}
 {"id": 1125899906842631, "start_id": 844424930131984, "end_id": 844424930131983, "label": "e", "properties": {"id": "convergent, edge two"}}
 {"id": 1125899906842632, "start_id": 844424930131982, "end_id": 844424930131983, "label": "e", "properties": {"id": "convergent, edge one"}}
 {"id": 1125899906842632, "start_id": 844424930131982, "end_id": 844424930131983, "label": "e", "properties": {"id": "convergent, edge one"}}
 {"id": 1125899906842633, "start_id": 844424930131985, "end_id": 844424930131986, "label": "e", "properties": {"id": "paths, edge one"}}
 {"id": 1125899906842633, "start_id": 844424930131985, "end_id": 844424930131986, "label": "e", "properties": {"id": "paths, edge one"}}
 {"id": 1125899906842634, "start_id": 844424930131987, "end_id": 844424930131988, "label": "e", "properties": {"id": "paths, edge two"}}
 {"id": 1125899906842634, "start_id": 844424930131987, "end_id": 844424930131988, "label": "e", "properties": {"id": "paths, edge two"}}
(20 rows)

CREATE (:n_var {var_name: 'Node A'});
--
(0 rows)

CREATE (:n_var {var_name: 'Node B'});
--
(0 rows)

CREATE (:n_var {var_name: 'Node C'});
--
(0 rows)

MATCH (a:n_var), (b:n_var) WHERE a.var_name <> b.var_name CREATE (a)-[:e_var {var_name: a.name + ' -> ' + b.name}]->(b);
ERROR:  syntax error at or near "name"
LINE 1: ...ame <> b.var_name CREATE (a)-[:e_var {var_name: a.name + ' -...
                                                             ^
MATCH (a:n_var) CREATE (a)-[:e_var {var_name: a.var_name + ' -> ' + a.var_name}]->(a);
--
(0 rows)

MATCH (a:n_var) CREATE (a)-[:e_var {var_name: a.var_name + ' -> new node'}]->(:n_other_node);
--
(0 rows)

MATCH (a:n_var) WHERE a.var_name = 'Node A' CREATE (a)-[b:e_var]->();
--
(0 rows)

CREATE (a)-[:b_var]->() RETURN a, id(a);
ERROR:  syntax error at or near "("
LINE 1: CREATE (a)-[:b_var]->() RETURN a, id(a);
                                            ^
CREATE ()-[b:e_var]->() RETURN b, id(b);
ERROR:  syntax error at or near "("
LINE 1: CREATE ()-[b:e_var]->() RETURN b, id(b);
                                            ^
CREATE (a)-[b:e_var {id: 0}]->() RETURN a, b, b.id, b.id + 1;
                           a                            |                                                              b                                                              | ?column? | ?column? 
--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+----------+----------
 {"id": 281474976710659, "label": "", "properties": {}} | {"id": 1688849860263944, "start_id": 281474976710659, "end_id": 281474976710660, "label": "e_var", "properties": {"id": 0}} | 0        | 1
(1 row)

MATCH (a:n_var) CREATE (a)-[b:e_var]->(a) RETURN a, b;
                                        a                                         |                                                           b                                                            
----------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------
 {"id": 1407374883553281, "label": "n_var", "properties": {"var_name": "Node A"}} | {"id": 1688849860263945, "start_id": 1407374883553281, "end_id": 1407374883553281, "label": "e_var", "properties": {}}
 {"id": 1407374883553282, "label": "n_var", "properties": {"var_name": "Node B"}} | {"id": 1688849860263946, "start_id": 1407374883553282, "end_id": 1407374883553282, "label": "e_var", "properties": {}}
 {"id": 1407374883553283, "label": "n_var", "properties": {"var_name": "Node C"}} | {"id": 1688849860263947, "start_id": 1407374883553283, "end_id": 1407374883553283, "label": "e_var", "properties": {}}
(3 rows)

MATCH (a:n_var) CREATE (a)-[b:e_var]->(c) RETURN a, b, c;
                                        a                                         |                                                           b                                                           |                           c                            
----------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------
 {"id": 1407374883553281, "label": "n_var", "properties": {"var_name": "Node A"}} | {"id": 1688849860263948, "start_id": 1407374883553281, "end_id": 281474976710661, "label": "e_var", "properties": {}} | {"id": 281474976710661, "label": "", "properties": {}}
 {"id": 1407374883553282, "label": "n_var", "properties": {"var_name": "Node B"}} | {"id": 1688849860263949, "start_id": 1407374883553282, "end_id": 281474976710662, "label": "e_var", "properties": {}} | {"id": 281474976710662, "label": "", "properties": {}}
 {"id": 1407374883553283, "label": "n_var", "properties": {"var_name": "Node C"}} | {"id": 1688849860263950, "start_id": 1407374883553283, "end_id": 281474976710663, "label": "e_var", "properties": {}} | {"id": 281474976710663, "label": "", "properties": {}}
(3 rows)

CREATE (a)-[:e_var]->() RETURN a;
                           a                            
--------------------------------------------------------
 {"id": 281474976710664, "label": "", "properties": {}}
(1 row)

CREATE ()-[b:e_var]->() RETURN b;
                                                          b                                                           
----------------------------------------------------------------------------------------------------------------------
 {"id": 1688849860263952, "start_id": 281474976710666, "end_id": 281474976710667, "label": "e_var", "properties": {}}
(1 row)

CREATE p=()-[:e_var]->() RETURN p;
                                                                                                                   p                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 281474976710668, "label": "", "properties": {}}, {"id": 1688849860263953, "start_id": 281474976710668, "end_id": 281474976710669, "label": "e_var", "properties": {}}, {"id": 281474976710669, "label": "", "properties": {}}]
(1 row)

CREATE p=(a {id:0})-[:e_var]->(a) RETURN p;
                                                                                                                          p                                                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 281474976710670, "label": "", "properties": {"id": 0}}, {"id": 1688849860263954, "start_id": 281474976710670, "end_id": 281474976710670, "label": "e_var", "properties": {}}, {"id": 281474976710670, "label": "", "properties": {"id": 0}}]
(1 row)

MATCH (a:n_var) CREATE p=(a)-[:e_var]->(a) RETURN p;
                                                                                                                                              p                                                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 1407374883553281, "label": "n_var", "properties": {"var_name": "Node A"}}, {"id": 1688849860263955, "start_id": 1407374883553281, "end_id": 1407374883553281, "label": "e_var", "properties": {}}, {"id": 1407374883553281, "label": "n_var", "properties": {"var_name": "Node A"}}]
 [{"id": 1407374883553282, "label": "n_var", "properties": {"var_name": "Node B"}}, {"id": 1688849860263956, "start_id": 1407374883553282, "end_id": 1407374883553282, "label": "e_var", "properties": {}}, {"id": 1407374883553282, "label": "n_var", "properties": {"var_name": "Node B"}}]
 [{"id": 1407374883553283, "label": "n_var", "properties": {"var_name": "Node C"}}, {"id": 1688849860263957, "start_id": 1407374883553283, "end_id": 1407374883553283, "label": "e_var", "properties": {}}, {"id": 1407374883553283, "label": "n_var", "properties": {"var_name": "Node C"}}]
(3 rows)

CREATE p=(a)-[:e_var]->(), (a)-[b:e_var]->(a) RETURN p, b;
                                                                                                                   p                                                                                                                    |                                                          b                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------
 [{"id": 281474976710671, "label": "", "properties": {}}, {"id": 1688849860263958, "start_id": 281474976710671, "end_id": 281474976710672, "label": "e_var", "properties": {}}, {"id": 281474976710672, "label": "", "properties": {}}] | {"id": 1688849860263959, "start_id": 281474976710671, "end_id": 281474976710671, "label": "e_var", "properties": {}}
(1 row)

MATCH (a:n_var) WHERE a.var_name = 'Node Z' CREATE (a)-[:e_var {var_name: a.var_name + ' -> doesnt exist'}]->(:n_other_node) RETURN a;
 a 
---
(0 rows)

MATCH (n:n_var) RETURN n;
                                        n                                         
----------------------------------------------------------------------------------
 {"id": 1407374883553281, "label": "n_var", "properties": {"var_name": "Node A"}}
 {"id": 1407374883553282, "label": "n_var", "properties": {"var_name": "Node B"}}
 {"id": 1407374883553283, "label": "n_var", "properties": {"var_name": "Node C"}}
(3 rows)

MATCH ()-[e:e_var]->() RETURN e;
                                                                           e                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 1688849860263937, "start_id": 1407374883553281, "end_id": 1407374883553281, "label": "e_var", "properties": {"var_name": "Node A -> Node A"}}
 {"id": 1688849860263938, "start_id": 1407374883553282, "end_id": 1407374883553282, "label": "e_var", "properties": {"var_name": "Node B -> Node B"}}
 {"id": 1688849860263939, "start_id": 1407374883553283, "end_id": 1407374883553283, "label": "e_var", "properties": {"var_name": "Node C -> Node C"}}
 {"id": 1688849860263940, "start_id": 1407374883553281, "end_id": 1970324836974593, "label": "e_var", "properties": {"var_name": "Node A -> new node"}}
 {"id": 1688849860263941, "start_id": 1407374883553282, "end_id": 1970324836974594, "label": "e_var", "properties": {"var_name": "Node B -> new node"}}
 {"id": 1688849860263942, "start_id": 1407374883553283, "end_id": 1970324836974595, "label": "e_var", "properties": {"var_name": "Node C -> new node"}}
 {"id": 1688849860263943, "start_id": 1407374883553281, "end_id": 281474976710658, "label": "e_var", "properties": {}}
 {"id": 1688849860263944, "start_id": 281474976710659, "end_id": 281474976710660, "label": "e_var", "properties": {"id": 0}}
 {"id": 1688849860263945, "start_id": 1407374883553281, "end_id": 1407374883553281, "label": "e_var", "properties": {}}
 {"id": 1688849860263946, "start_id": 1407374883553282, "end_id": 1407374883553282, "label": "e_var", "properties": {}}
 {"id": 1688849860263947, "start_id": 1407374883553283, "end_id": 1407374883553283, "label": "e_var", "properties": {}}
 {"id": 1688849860263948, "start_id": 1407374883553281, "end_id": 281474976710661, "label": "e_var", "properties": {}}
 {"id": 1688849860263949, "start_id": 1407374883553282, "end_id": 281474976710662, "label": "e_var", "properties": {}}
 {"id": 1688849860263950, "start_id": 1407374883553283, "end_id": 281474976710663, "label": "e_var", "properties": {}}
 {"id": 1688849860263951, "start_id": 281474976710664, "end_id": 281474976710665, "label": "e_var", "properties": {}}
 {"id": 1688849860263952, "start_id": 281474976710666, "end_id": 281474976710667, "label": "e_var", "properties": {}}
 {"id": 1688849860263953, "start_id": 281474976710668, "end_id": 281474976710669, "label": "e_var", "properties": {}}
 {"id": 1688849860263954, "start_id": 281474976710670, "end_id": 281474976710670, "label": "e_var", "properties": {}}
 {"id": 1688849860263955, "start_id": 1407374883553281, "end_id": 1407374883553281, "label": "e_var", "properties": {}}
 {"id": 1688849860263956, "start_id": 1407374883553282, "end_id": 1407374883553282, "label": "e_var", "properties": {}}
 {"id": 1688849860263957, "start_id": 1407374883553283, "end_id": 1407374883553283, "label": "e_var", "properties": {}}
 {"id": 1688849860263958, "start_id": 281474976710671, "end_id": 281474976710672, "label": "e_var", "properties": {}}
 {"id": 1688849860263959, "start_id": 281474976710671, "end_id": 281474976710671, "label": "e_var", "properties": {}}
(23 rows)

--Validate every vertex has the correct label
MATCH (n) RETURN n;
                                            n                                            
-----------------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {}}
 {"id": 281474976710658, "label": "", "properties": {}}
 {"id": 281474976710659, "label": "", "properties": {}}
 {"id": 281474976710660, "label": "", "properties": {}}
 {"id": 281474976710661, "label": "", "properties": {}}
 {"id": 281474976710662, "label": "", "properties": {}}
 {"id": 281474976710663, "label": "", "properties": {}}
 {"id": 281474976710664, "label": "", "properties": {}}
 {"id": 281474976710665, "label": "", "properties": {}}
 {"id": 281474976710666, "label": "", "properties": {}}
 {"id": 281474976710667, "label": "", "properties": {}}
 {"id": 281474976710668, "label": "", "properties": {}}
 {"id": 281474976710669, "label": "", "properties": {}}
 {"id": 281474976710670, "label": "", "properties": {"id": 0}}
 {"id": 281474976710671, "label": "", "properties": {}}
 {"id": 281474976710672, "label": "", "properties": {}}
 {"id": 844424930131969, "label": "v", "properties": {}}
 {"id": 844424930131970, "label": "v", "properties": {}}
 {"id": 844424930131971, "label": "v", "properties": {"prop_key": "value"}}
 {"id": 844424930131972, "label": "v", "properties": {"id": "right rel, initial node"}}
 {"id": 844424930131973, "label": "v", "properties": {"id": "right rel, end node"}}
 {"id": 844424930131974, "label": "v", "properties": {"id": "left rel, initial node"}}
 {"id": 844424930131975, "label": "v", "properties": {"id": "left rel, end node"}}
 {"id": 844424930131976, "label": "v", "properties": {"id": "path, initial node"}}
 {"id": 844424930131977, "label": "v", "properties": {"id": "path, middle node"}}
 {"id": 844424930131978, "label": "v", "properties": {"id": "path, last node"}}
 {"id": 844424930131979, "label": "v", "properties": {"id": "divergent, initial node"}}
 {"id": 844424930131980, "label": "v", "properties": {"id": "divergent middle node"}}
 {"id": 844424930131981, "label": "v", "properties": {"id": "divergent, end node"}}
 {"id": 844424930131982, "label": "v", "properties": {"id": "convergent, initial node"}}
 {"id": 844424930131983, "label": "v", "properties": {"id": "convergent middle node"}}
 {"id": 844424930131984, "label": "v", "properties": {"id": "convergent, end node"}}
 {"id": 844424930131985, "label": "v", "properties": {"id": "paths, vertex one"}}
 {"id": 844424930131986, "label": "v", "properties": {"id": "paths, vertex two"}}
 {"id": 844424930131987, "label": "v", "properties": {"id": "paths, vertex three"}}
 {"id": 844424930131988, "label": "v", "properties": {"id": "paths, vertex four"}}
 {"id": 1407374883553281, "label": "n_var", "properties": {"var_name": "Node A"}}
 {"id": 1407374883553282, "label": "n_var", "properties": {"var_name": "Node B"}}
 {"id": 1407374883553283, "label": "n_var", "properties": {"var_name": "Node C"}}
 {"id": 1970324836974593, "label": "n_other_node", "properties": {}}
 {"id": 1970324836974594, "label": "n_other_node", "properties": {}}
 {"id": 1970324836974595, "label": "n_other_node", "properties": {}}
(42 rows)

-- prepared statements
/*
PREPARE p_1 AS SELECT * FROM cypher('cypher_create', $$CREATE (v:new_vertex {key: 'value'}) RETURN v$$) AS (a vertex);
EXECUTE p_1;
EXECUTE p_1;

PREPARE p_2 AS SELECT * FROM cypher('cypher_create', $$CREATE (v:new_vertex {key: $var_name}) RETURN v$$, $1) AS (a vertex);
EXECUTE p_2('{'var_name': 'Hello Prepared Statements'}');
EXECUTE p_2('{'var_name': 'Hello Prepared Statements 2'}');

-- pl/pgsql
CREATE FUNCTION create_test()
RETURNS TABLE(v vertex)
LANGUAGE plpgsql
VOLATILE
AS $BODY$
BEGIN
	RETURN QUERY SELECT * FROM cypher('cypher_create', $$CREATE (v:new_vertex {key: 'value'}) RETURN v$$) AS (a vertex);
END
$BODY$;

SELECT create_test();
SELECT create_test();
*/
--
-- check the cypher CREATE clause inside an INSERT INTO
--
/*
CREATE TABLE simple_path (u vertex, e edge, v vertex);

INSERT INTO simple_path(SELECT * FROM cypher('cypher_create',
    $$CREATE (u)-[e:knows]->(v) return u, e, v
    $$) AS (u vertex, e edge, v vertex));

SELECT count(*) FROM simple_path;
*/
--
-- check the cypher CREATE clause inside of a BEGIN/END/COMMIT block
--
/*
BEGIN;
SELECT * FROM cypher('cypher_create', $$ CREATE (a:Part {part_num: '670'}) $$) as (a gtype);
SELECT * FROM cypher('cypher_create', $$ MATCH (a:Part) RETURN a $$) as (a vertex);

SELECT * FROM cypher('cypher_create', $$ CREATE (a:Part {part_num: '671'}) $$) as (a gtype);
SELECT * FROM cypher('cypher_create', $$ CREATE (a:Part {part_num: '672'}) $$) as (a gtype);
SELECT * FROM cypher('cypher_create', $$ MATCH (a:Part) RETURN a $$) as (a vertex);

SELECT * FROM cypher('cypher_create', $$ CREATE (a:Part {part_num: '673'}) $$) as (a gtype);
SELECT * FROM cypher('cypher_create', $$ MATCH (a:Part) RETURN a $$) as (a vertex);
END;
*/
--
-- Errors
--
-- Var 'a' cannot have properties in the create clause
MATCH (a:n_var) WHERE a.var_name = 'Node A' CREATE (a {test:1})-[:e_var]->();
ERROR:  previously declared nodes in a create clause cannot have properties
-- Var 'a' cannot change labels
MATCH (a:n_var) WHERE a.var_name = 'Node A' CREATE (a:new_label)-[:e_var]->();
ERROR:  previously declared variables cannot have a label
MATCH (a:n_var)-[b]-() WHERE a.var_name = 'Node A' CREATE (a)-[b:e_var]->();
ERROR:  variable b already exists
--CREATE with joins
/*
SELECT *
FROM (CREATE (a) RETURN a) as q(a vertex),
     (CREATE (b) RETURN b) as t(b vertex);
*/
--
-- Clean up
--
DROP GRAPH cypher_create CASCADE;
NOTICE:  drop cascades to 7 other objects
DETAIL:  drop cascades to table cypher_create._ag_label_vertex
drop cascades to table cypher_create._ag_label_edge
drop cascades to table cypher_create.v
drop cascades to table cypher_create.e
drop cascades to table cypher_create.n_var
drop cascades to table cypher_create.e_var
drop cascades to table cypher_create.n_other_node
NOTICE:  graph "cypher_create" has been dropped
 drop_graph 
------------
 
(1 row)

--
-- End
--
