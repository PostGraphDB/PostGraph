/*
 * PostGraph
 * Copyright (C) 2023 PostGraphDB
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
LOAD 'postgraph';
SET search_path TO postgraph, public;
SELECT * FROM create_graph('geometric');
NOTICE:  graph "geometric" has been created
 create_graph 
--------------
 
(1 row)

--
-- Point
--
SELECT topoint('"(1,1)"');
 topoint 
---------
 (1,1)
(1 row)

SELECT '(1,1)'::point::gtype;
 gtype 
-------
 (1,1)
(1 row)

select * FROM cypher('geometric', $$
    RETURN 'POINT(1 1)'::geometry
$$) AS (c point);
   c   
-------
 (1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1)'::point $$) AS r(c gtype);
   c   
-------
 (1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1)'::point $$) AS r(c point);
   c   
-------
 (1,1)
(1 row)

--
-- Lseg
--
SELECT tolseg('"(1,1), (2,2)"');
    tolseg     
---------------
 [(1,1),(2,2)]
(1 row)

SELECT * FROM cypher('geometric', $$RETURN tolseg('(1,1), (2,2)') $$) AS r(c gtype);
       c       
---------------
 [(1,1),(2,2)]
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::lseg $$) AS r(c gtype);
       c       
---------------
 [(1,1),(2,2)]
(1 row)

--
-- Line
--
SELECT toline('"{1,1,2}"');
 toline  
---------
 {1,1,2}
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '{1,1,2}'::line $$) AS r(c gtype);
    c    
---------
 {1,1,2}
(1 row)

--
-- Path
--
SELECT topath('"[(1,1), (2,2)]"');
    topath     
---------------
 [(1,1),(2,2)]
(1 row)

SELECT topath('"((1,1), (2,2))"');
    topath     
---------------
 ((1,1),(2,2))
(1 row)

SELECT '[(1,1), (2,2)]'::path::gtype;
        gtype         
----------------------
 (4.243991677e-314,0)
(1 row)

SELECT topath('"((1,1), (2,2))"')::path;
    topath     
---------------
 ((1,1),(2,2))
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '[(1,1), (2,2)]'::path $$) AS r(c gtype);
       c       
---------------
 [(1,1),(2,2)]
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '[(1,1), (2,2)]'::path $$) AS r(c path);
       c       
---------------
 [(1,1),(2,2)]
(1 row)

--
-- Polygon
--
SELECT topolygon('"(1,1), (2,2), (3, 3), (4, 4)"');
         topolygon         
---------------------------
 ((1,1),(2,2),(3,3),(4,4))
(1 row)

SELECT topolygon('"(1,1), (2,2), (3, 3), (4, 4)"')::polygon;
         topolygon         
---------------------------
 ((1,1),(2,2),(3,3),(4,4))
(1 row)

SELECT '(1,1), (2,2), (3, 3), (4, 4)'::polygon::gtype;
           gtype           
---------------------------
 ((1,1),(2,2),(3,3),(4,4))
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2), (3, 3), (4, 4)'::polygon $$) AS r(c gtype);
             c             
---------------------------
 ((1,1),(2,2),(3,3),(4,4))
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2), (3, 3), (4, 4)'::polygon $$) AS r(c polygon);
             c             
---------------------------
 ((1,1),(2,2),(3,3),(4,4))
(1 row)

--
-- Circle
--
SELECT tocircle('"(1,1), 3"');
 tocircle  
-----------
 <(1,1),3>
(1 row)

SELECT * FROM cypher('geometric', $$RETURN tocircle('(1,1), 3') $$) AS r(c gtype);
     c     
-----------
 <(1,1),3>
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), 3'::circle $$) AS r(c gtype);
     c     
-----------
 <(1,1),3>
(1 row)

--
-- Box
--
SELECT tobox('"(1,1), (2,2)"');
    tobox    
-------------
 (2,2),(1,1)
(1 row)

SELECT tobox('"(1,1), (2,2)"')::box;
    tobox    
-------------
 (2,2),(1,1)
(1 row)

SELECT '(1,1), (2,2)'::box::gtype;
    gtype    
-------------
 (2,2),(1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::box $$) AS r(c gtype);
      c      
-------------
 (2,2),(1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::box $$) AS r(c box);
      c      
-------------
 (2,2),(1,1)
(1 row)

--
-- Geometric + Point
--
--
-- Point + Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1)'::point + '(1,1)'::point $$) AS r(c gtype);
   c   
-------
 (2,2)
(1 row)

--
-- Box + Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::box + '(1,1)'::point $$) AS r(c gtype);
      c      
-------------
 (3,3),(2,2)
(1 row)

--
-- Path + Point
--
SELECT * FROM cypher('geometric', $$RETURN '[(1,1), (2,2)]'::path + '(1,1)'::point $$) AS r(c gtype);
       c       
---------------
 [(2,2),(3,3)]
(1 row)

--
-- Circle + Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), 3'::circle + '(1,1)'::point $$) AS r(c gtype);
     c     
-----------
 <(2,2),3>
(1 row)

--
-- Geometric - Point
--
--
-- Point - Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1)'::point - '(1,1)'::point $$) AS r(c gtype);
   c   
-------
 (0,0)
(1 row)

--
-- Box - Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::box - '(1,1)'::point $$) AS r(c gtype);
      c      
-------------
 (1,1),(0,0)
(1 row)

--
-- Path - Point
--
SELECT * FROM cypher('geometric', $$RETURN '[(1,1), (2,2)]'::path - '(1,1)'::point $$) AS r(c gtype);
       c       
---------------
 [(0,0),(1,1)]
(1 row)

--
-- Circle - Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), 3'::circle - '(1,1)'::point $$) AS r(c gtype);
     c     
-----------
 <(0,0),3>
(1 row)

--
-- Geometric / Point
--
--
-- Point / Point
--
SELECT * FROM cypher('geometric', $$RETURN '(4,4)'::point / '(2,2)'::point $$) AS r(c gtype);
   c   
-------
 (2,0)
(1 row)

--
-- Box / Point
--
SELECT * FROM cypher('geometric', $$RETURN '(4,4), (2,2)'::box / '(2,2)'::point $$) AS r(c gtype);
      c      
-------------
 (2,0),(1,0)
(1 row)

--
-- Path / Point
--
SELECT * FROM cypher('geometric', $$RETURN '[(4,4), (2,2)]'::path / '(2,2)'::point $$) AS r(c gtype);
       c       
---------------
 [(2,0),(1,0)]
(1 row)

--
-- Circle / Point
--
SELECT * FROM cypher('geometric', $$RETURN '(4,4), 3'::circle / '(2, 2)'::point $$) AS r(c gtype);
             c              
----------------------------
 <(2,0),1.0606601717798212>
(1 row)

--
-- Geometric * Point
--
--
-- Point * Point
--
SELECT * FROM cypher('geometric', $$RETURN '(4,4)'::point * '(2,2)'::point $$) AS r(c gtype);
   c    
--------
 (0,16)
(1 row)

--
-- Box * Point
--
SELECT * FROM cypher('geometric', $$RETURN '(4,4), (2,2)'::box * '(2,2)'::point $$) AS r(c gtype);
      c       
--------------
 (0,16),(0,8)
(1 row)

--
-- Path * Point
--
SELECT * FROM cypher('geometric', $$RETURN '[(4,4), (2,2)]'::path * '(2,2)'::point $$) AS r(c gtype);
       c        
----------------
 [(0,16),(0,8)]
(1 row)

--
-- Circle * Point
--
SELECT * FROM cypher('geometric', $$RETURN '(4,4), 3'::circle * '(2, 2)'::point $$) AS r(c gtype);
             c              
----------------------------
 <(0,16),8.485281374238571>
(1 row)

--
-- Box # Box
--
SELECT * FROM cypher('geometric', $$RETURN '(2,2), (-1,-1)'::box # '(1, 1), (-2, -2)'::box $$) AS r(c gtype);
       c       
---------------
 (1,1),(-1,-1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(4,4), (2,2)'::box # '(10,10), (5,5)'::box $$) AS r(c gtype);
 c 
---
 
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(4,4), (2,2)'::box # '(5, 5), (5,5)'::box $$) AS r(c gtype);
 c 
---
 
(1 row)

--
-- LSeg # LSeg
--
SELECT * FROM cypher('geometric', $$RETURN '(0,0), (1,1)'::lseg # '(1,0), (0,1)'::lseg $$) AS r(c gtype);
     c     
-----------
 (0.5,0.5)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::lseg # '(1,1), (2,2)'::lseg $$) AS r(c gtype);
 c 
---
 
(1 row)

--
-- Line # Line
--
SELECT * FROM cypher('geometric', $$RETURN '(0,0), (1,1)'::line # '(1,0), (0,1)'::line $$) AS r(c gtype);
     c     
-----------
 (0.5,0.5)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::line # '(1,1), (2,2)'::line $$) AS r(c gtype);
 c 
---
 
(1 row)

--
-- LSeg ?-| LSeg
--
SELECT * FROM cypher('geometric', $$RETURN '(0,0), (1,1)'::lseg ?-| '(1,0), (0,1)'::lseg $$) AS r(c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::lseg ?-| '(2,2), (3,3)'::lseg $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Line ?-| Line
--
SELECT * FROM cypher('geometric', $$RETURN '(0,0), (1,1)'::line ?-| '(1,0), (0,1)'::line $$) AS r(c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::line ?-| '(2,2), (3,3)'::line $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- LSeg ?|| LSeg
--
SELECT * FROM cypher('geometric', $$RETURN '(0,0), (1,1)'::lseg ?|| '(1,0), (0,1)'::lseg $$) AS r(c gtype);
   c   
-------
 false
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::lseg ?|| '(2,2), (3,3)'::lseg $$) AS r(c gtype);
  c   
------
 true
(1 row)

--
-- Line ?|| Line
--
SELECT * FROM cypher('geometric', $$RETURN '(0,0), (1,1)'::line ?|| '(1,0), (0,1)'::line $$) AS r(c gtype);
   c   
-------
 false
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2)'::line ?|| '(2,2), (3,3)'::line $$) AS r(c gtype);
  c   
------
 true
(1 row)

--
-- Point ?| Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1)'::point ?| '(1,2)'::point $$) AS r(c boolean);
 c 
---
 t
(1 row)

--
-- ?| Lseg
--
SELECT * FROM cypher('geometric', $$RETURN ?| '(0,1), (0,2)'::lseg $$) AS (c boolean);
 c 
---
 t
(1 row)

SELECT * FROM cypher('geometric', $$RETURN ?| '(1,0), (0,1)'::lseg $$) AS (c boolean);
 c 
---
 f
(1 row)

--
-- ?| Line
--
SELECT * FROM cypher('geometric', $$RETURN ?| '(0,1), (0,2)'::line $$) AS (c boolean);
 c 
---
 t
(1 row)

SELECT * FROM cypher('geometric', $$RETURN ?| '(1,0), (0,1)'::line $$) AS (c boolean);
 c 
---
 f
(1 row)

--
-- Box @> Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), (5,5)'::box @> '(1,2)'::point $$) AS r(c boolean);
 c 
---
 t
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(0,0), (1,1)'::box @> '(1,2)'::point $$) AS r(c boolean);
 c 
---
 f
(1 row)

--
-- Box @> Box
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), (0, 0)'::box @> '(4, 4), (3, 3)'::box $$) AS r(c gtype);
   c   
-------
 false
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(2,2), (-1,-1)'::box @> '(1, 1), (-2, -2)'::box $$) AS r(c gtype);
   c   
-------
 false
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(4,4), (2,2)'::box @> '(10,10), (5,5)'::box $$) AS r(c gtype);
   c   
-------
 false
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(4,4), (2,2)'::box @> '(5, 5), (5,5)'::box $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Path @> Point
--
SELECT * FROM cypher('geometric', $$RETURN '[(4,4), (2,2)]'::path @> '(2,2)'::point $$) AS r(c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '[(4,4), (2,2)]'::path @> '(3,5)'::point $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Polygon @> Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2), (3, 3), (4, 4)'::polygon @> '(2,2)'::point $$) AS r(c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), (2,2), (3, 3), (4, 4)'::polygon @> '(3,5)'::point $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Circle @> Point
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), 2'::circle @> '(2,2)'::point $$) AS r(c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), 2'::circle @> '(3,5)'::point $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Circle @> Circle
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), 2'::circle @> '(1,1), 3'::circle $$) AS r(c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), 4'::circle @> '(1,1), 3'::circle $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Point <@ Box
--
SELECT * FROM cypher('geometric', $$RETURN '(1,2)'::point <@ '(1,1), (5,5)'::box $$) AS r(c boolean);
 c 
---
 t
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1, 2)'::point <@ '(0,0), (1,1)'::box $$) AS r(c boolean);
 c 
---
 f
(1 row)

--
-- Box <@ Box
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), (0, 0)'::box <@ '(4, 4), (3, 3)'::box $$) AS r(c gtype);
   c   
-------
 false
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(2,2), (-1,-1)'::box <@ '(1, 1), (-2, -2)'::box $$) AS r(c gtype);
   c   
-------
 false
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(4,4), (2,2)'::box <@ '(10,10), (5,5)'::box $$) AS r(c gtype);
   c   
-------
 false
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(4,4), (2,2)'::box <@ '(5, 5), (5,5)'::box $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Point <@ Path
--
SELECT * FROM cypher('geometric', $$RETURN '(2,2)'::point <@ '[(4,4), (2,2)]'::path $$) AS r(c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(3,5)'::point <@ '[(4,4), (2,2)]'::path $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Point <@ Polygon
--
SELECT * FROM cypher('geometric', $$RETURN '(2,2)'::point <@ '(1,1), (2,2), (3, 3), (4, 4)'::polygon $$) AS r(c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(3,5)'::point <@ '(1,1), (2,2), (3, 3), (4, 4)'::polygon $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Point <@ Circle
--
SELECT * FROM cypher('geometric', $$RETURN '(2,2)'::point <@ '(1,1), 3'::circle $$) AS r(c gtype);
  c   
------
 true
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(3,5)'::point <@ '(1,1), 3'::circle $$) AS r(c gtype);
   c   
-------
 false
(1 row)

--
-- Circle <@ Circle
--
SELECT * FROM cypher('geometric', $$RETURN '(1,1), 2'::circle <@ '(1,1), 3'::circle $$) AS r(c gtype);
   c   
-------
 false
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,1), 4'::circle <@ '(1,1), 3'::circle $$) AS r(c gtype);
  c   
------
 true
(1 row)

--
-- Point ## Box
--
SELECT * FROM cypher('geometric', $$RETURN '(10,20)'::point ## '(1,1), (5,5)'::box $$) AS (c gtype);
   c   
-------
 (5,5)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,2)'::point ## '(1,1), (5,5)'::box $$) AS (c gtype);
   c   
-------
 (1,2)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1, 2)'::point ## '(0,0), (1,1)'::box $$) AS (c gtype);
   c   
-------
 (1,1)
(1 row)

--
-- Point ## LSeg
--
SELECT * FROM cypher('geometric', $$RETURN '(10,20)'::point ## '(0,1), (0,2)'::lseg $$) AS (c gtype);
   c   
-------
 (0,2)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,2)'::point ## '(0,1), (0,2)'::lseg $$) AS (c gtype);
   c   
-------
 (0,2)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1, 2)'::point ## '(0,1), (0,2)'::lseg $$) AS (c gtype);
   c   
-------
 (0,2)
(1 row)

--
-- Point ## Line
--
SELECT * FROM cypher('geometric', $$RETURN '(10,20)'::point ## '(0,1), (0,2)'::line $$) AS (c gtype);
   c    
--------
 (0,20)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1,2)'::point ## '(0,1), (0,2)'::line $$) AS (c gtype);
   c   
-------
 (0,2)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(1, 2)'::point ## '(0,1), (0,2)'::line $$) AS (c gtype);
   c   
-------
 (0,2)
(1 row)

--
-- LSeg ## Box
--
SELECT * FROM cypher('geometric', $$RETURN '(0,1), (0,2)'::lseg ## '(1,1), (5,5)'::box $$) AS (c gtype);
   c   
-------
 (1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(0,1), (0,2)'::lseg ## '(1,1), (5,5)'::box $$) AS (c gtype);
   c   
-------
 (1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(0,1), (0,2)'::lseg ## '(0,0), (1,1)'::box $$) AS (c gtype);
   c   
-------
 (0,1)
(1 row)

--
-- LSeg ## LSeg
--
SELECT * FROM cypher('geometric', $$RETURN '(0,1), (0,2)'::lseg ## '(1,1), (5,5)'::lseg $$) AS (c gtype);
   c   
-------
 (1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(0,1), (0,2)'::lseg ## '(1,1), (5,5)'::lseg $$) AS (c gtype);
   c   
-------
 (1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(0,1), (0,2)'::lseg ## '(0,0), (1,1)'::lseg $$) AS (c gtype);
     c     
-----------
 (0.5,0.5)
(1 row)

--
-- Line ## LSeg
--
SELECT * FROM cypher('geometric', $$RETURN '(0,1), (0,2)'::line ## '(1,1), (5,5)'::lseg $$) AS (c gtype);
   c   
-------
 (1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(0,1), (0,2)'::line ## '(1,1), (5,5)'::lseg $$) AS (c gtype);
   c   
-------
 (1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN '(0,1), (0,2)'::line ## '(0,0), (1,1)'::lseg $$) AS (c gtype);
   c   
-------
 (0,0)
(1 row)

--
-- @@ Operator
--
SELECT * FROM cypher('geometric', $$RETURN @@ '(0,1), (0,2)'::lseg $$) AS (c gtype);
    c    
---------
 (0,1.5)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN @@ '(1,1), (5,5)'::box $$) AS (c gtype);
   c   
-------
 (3,3)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN @@ '(1,1), 3'::circle $$) AS (c gtype);
   c   
-------
 (1,1)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN @@ '(1,1), (2,2), (3, 3), (4, 4)'::polygon  $$) AS (c gtype);
     c     
-----------
 (2.5,2.5)
(1 row)

--
-- Geometric Functions
--
--
-- Bound_Box
--
SELECT * FROM cypher('geometric', $$RETURN bound_box('(1,1), (0, 0)'::box, '(4, 4), (3, 3)'::box) $$) AS r(c gtype);
      c      
-------------
 (4,4),(0,0)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN bound_box('(2,2), (-1,-1)'::box, '(1, 1), (-2, -2)'::box) $$) AS r(c gtype);
       c       
---------------
 (2,2),(-2,-2)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN bound_box('(4,4), (2,2)'::box, '(10,10), (5,5)'::box) $$) AS r(c gtype);
       c       
---------------
 (10,10),(2,2)
(1 row)

SELECT * FROM cypher('geometric', $$RETURN bound_box('(4,4), (2,2)'::box, '(5, 5), (5,5)'::box) $$) AS r(c gtype);
      c      
-------------
 (5,5),(2,2)
(1 row)

--
-- Height
--
SELECT * FROM cypher('geometric', $$RETURN height('(1,1), (0, 0)'::box) $$) AS r(c gtype);
  c  
-----
 1.0
(1 row)

SELECT * FROM cypher('geometric', $$RETURN height('(2,2), (-1,-1)'::box) $$) AS r(c gtype);
  c  
-----
 3.0
(1 row)

SELECT * FROM cypher('geometric', $$RETURN height('(4,4), (2,2)'::box) $$) AS r(c gtype);
  c  
-----
 2.0
(1 row)

--
-- Width
--
SELECT * FROM cypher('geometric', $$RETURN width('(1,1), (0, 0)'::box) $$) AS r(c gtype);
  c  
-----
 1.0
(1 row)

SELECT * FROM cypher('geometric', $$RETURN width('(2,2), (-1,-1)'::box) $$) AS r(c gtype);
  c  
-----
 3.0
(1 row)

SELECT * FROM cypher('geometric', $$RETURN width('(4,4), (2,2)'::box) $$) AS r(c gtype);
  c  
-----
 2.0
(1 row)

--
-- Clean Up
--
SELECT * FROM drop_graph('geometric', true);
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to table geometric._ag_label_vertex
drop cascades to table geometric._ag_label_edge
NOTICE:  graph "geometric" has been dropped
 drop_graph 
------------
 
(1 row)

