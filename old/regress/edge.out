/*
 * PostGraph
 * Copyright (C) 2023 by PostGraph
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
LOAD 'postgraph';
SET search_path TO postgraph;
SELECT create_graph('edge');
NOTICE:  graph "edge" has been created
 create_graph 
--------------
 
(1 row)

SELECT create_elabel('edge', 'elabel');
NOTICE:  ELabel "elabel" has been created
 create_elabel 
---------------
 
(1 row)

--
-- Vertex
--
--Basic Vertex Creation
SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) FROM ag_graph;
                                        build_edge                                        
------------------------------------------------------------------------------------------
 {"id": 844424930131969, "start_id": 2, "end_id": 3, "label": "elabel", "properties": {}}
(1 row)

SELECT build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid, graphid, gtype_build_map('id', 2)) FROM ag_graph;
                                           build_edge                                            
-------------------------------------------------------------------------------------------------
 {"id": 844424930131969, "start_id": 2, "end_id": 3, "label": "elabel", "properties": {"id": 2}}
(1 row)

--Null properties
SELECT build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid,  graphid, NULL) FROM ag_graph;
 build_edge 
------------
 
(1 row)

SELECT build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid, graphid, gtype_build_list()) FROM ag_graph;
 build_edge 
------------
 
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid,  graphid, gtype_build_map()) =
       build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid, graphid, gtype_build_map()) FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid,  graphid, gtype_build_map()) =
       build_edge(_graphid(3, 4),  '2'::graphid, '3'::graphid, graphid, gtype_build_map()) FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid,  graphid, gtype_build_map()) <>
       build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid, graphid, gtype_build_map()) FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid,  graphid, gtype_build_map()) <>
       build_edge(_graphid(3, 4),  '2'::graphid, '3'::graphid, graphid, gtype_build_map()) FROM ag_graph;
 ?column? 
----------
 t
(1 row)

--
-- Equality Operator
--
SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) =
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) =
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) =
       build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 f
(1 row)

--
-- Not Equals Operator
--
SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) <>
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) <>
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) <>
       build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 t
(1 row)

--
-- Greater than Operator
--
SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) >
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) >
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) >
       build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 f
(1 row)

--
-- Greater Than Or Equal To Operator
--
SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) >=
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) >=
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) >=
       build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 f
(1 row)

--
-- Less than Operator
--
SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) <
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) <
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) <
       build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 t
(1 row)

--
-- Less Than Or Equal To Operator
--
SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) <=
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 t
(1 row)

SELECT build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) <=
       build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 f
(1 row)

SELECT build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map()) <=
       build_edge(_graphid(3, 2), '2'::graphid, '3'::graphid, graphid, gtype_build_map())
FROM ag_graph;
 ?column? 
----------
 t
(1 row)

-- id
SELECT id(build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())) FROM ag_graph;
       id        
-----------------
 844424930131969
(1 row)

SELECT id(build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid, graphid, gtype_build_map('id', 2))) FROM ag_graph;
       id        
-----------------
 844424930131969
(1 row)

-- start_id
SELECT start_id(build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())) FROM ag_graph;
 start_id 
----------
 2
(1 row)

SELECT start_id(build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid, graphid, gtype_build_map('id', 2))) FROM ag_graph;
 start_id 
----------
 2
(1 row)

-- end_id
SELECT end_id(build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())) FROM ag_graph;
 end_id 
--------
 3
(1 row)

SELECT end_id(build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid, graphid, gtype_build_map('id', 2))) FROM ag_graph;
 end_id 
--------
 3
(1 row)

-- label
SELECT label(build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())) FROM ag_graph;
  label   
----------
 "elabel"
(1 row)

SELECT label(build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid, graphid, gtype_build_map('id', 2))) FROM ag_graph;
  label   
----------
 "elabel"
(1 row)

--properties
SELECT properties(build_edge(_graphid(3, 1), '2'::graphid, '3'::graphid, graphid, gtype_build_map())) FROM ag_graph;
 properties 
------------
 {}
(1 row)

SELECT properties(build_edge(_graphid(3, 1),  '2'::graphid, '3'::graphid, graphid, gtype_build_map('id', 2))) FROM ag_graph;
 properties 
------------
 {"id": 2}
(1 row)

SELECT drop_graph('edge', true);
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to table edge._ag_label_vertex
drop cascades to table edge._ag_label_edge
drop cascades to table edge.elabel
NOTICE:  graph "edge" has been dropped
 drop_graph 
------------
 
(1 row)

